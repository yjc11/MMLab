2023-02-11 00:26:26,413 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
CUDA available: True
GPU 0: NVIDIA GeForce GTX 1080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.3, V11.3.109
GCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
PyTorch: 1.10.0+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.1+cu113
OpenCV: 4.6.0
MMCV: 1.6.1
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMDetection: 2.25.1+
------------------------------------------------------------

2023-02-11 00:26:26,854 - mmdet - INFO - Distributed training: False
2023-02-11 00:26:27,265 - mmdet - INFO - Config:
model = dict(
    type='MaskScoringRCNN',
    backbone=dict(
        type='ResNeXt',
        depth=101,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(
            type='Pretrained', checkpoint='open-mmlab://resnext101_64x4d'),
        groups=64,
        base_width=4),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='MaskScoringRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=1,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0)),
        mask_iou_head=dict(
            type='MaskIoUHead',
            num_convs=4,
            num_fcs=2,
            roi_feat_size=14,
            in_channels=256,
            conv_out_channels=256,
            fc_out_channels=1024,
            num_classes=1)),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False,
            mask_thr_binary=0.5)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/balloon/train/train_anno.json',
        img_prefix='data/balloon/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ],
        classes=('balloon', )),
    val=dict(
        type='CocoDataset',
        ann_file='data/balloon/val/val_anno.json',
        img_prefix='data/balloon/val/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('balloon', )),
    test=dict(
        type='CocoDataset',
        ann_file='data/balloon/val/val_anno.json',
        img_prefix='data/balloon/val/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('balloon', )))
evaluation = dict(metric=['bbox', 'segm'])
optimizer = dict(type='SGD', lr=0.002, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=5)
checkpoint_config = dict(interval=1)
log_config = dict(interval=1, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'ms_rcnn_x101_64x4d_fpn_1x_coco_20200206-86ba88d2.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=16)
work_dir = './work_dirs/balloon_config'
auto_resume = False
gpu_ids = range(0, 1)

2023-02-11 00:26:27,266 - mmdet - INFO - Set random seed to 1283785443, deterministic: False
2023-02-11 00:26:28,939 - mmdet - INFO - initialize ResNeXt with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://resnext101_64x4d'}
2023-02-11 00:26:29,346 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-02-11 00:26:29,373 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-02-11 00:26:29,379 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
2023-02-11 00:26:29,512 - mmdet - INFO - initialize MaskIoUHead with init_cfg [{'type': 'Kaiming', 'override': {'name': 'convs'}}, {'type': 'Caffe2Xavier', 'override': {'name': 'fcs'}}, {'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_mask_iou'}}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.conv1.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.conv2.weight - torch.Size([256, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.conv3.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.conv1.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.conv2.weight - torch.Size([256, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.conv3.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.conv1.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.conv2.weight - torch.Size([256, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.conv3.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.conv1.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.conv1.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.conv1.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.conv2.weight - torch.Size([2048, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn2.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn2.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.conv3.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.conv1.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.conv2.weight - torch.Size([2048, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn2.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn2.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.conv3.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.conv1.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.conv2.weight - torch.Size([2048, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn2.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn2.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.conv3.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

roi_head.mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

roi_head.mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

roi_head.mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskScoringRCNN  

roi_head.mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.upsample.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_iou_head.convs.0.weight - torch.Size([256, 257, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.0.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.1.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.2.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.3.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.convs.3.bias - torch.Size([256]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

roi_head.mask_iou_head.fcs.0.weight - torch.Size([1024, 12544]): 
Caffe2XavierInit: a=1, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

roi_head.mask_iou_head.fcs.0.bias - torch.Size([1024]): 
Caffe2XavierInit: a=1, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

roi_head.mask_iou_head.fcs.1.weight - torch.Size([1024, 1024]): 
Caffe2XavierInit: a=1, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

roi_head.mask_iou_head.fcs.1.bias - torch.Size([1024]): 
Caffe2XavierInit: a=1, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

roi_head.mask_iou_head.fc_mask_iou.weight - torch.Size([1, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.mask_iou_head.fc_mask_iou.bias - torch.Size([1]): 
NormalInit: mean=0, std=0.01, bias=0 
2023-02-11 00:26:33,772 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-02-11 00:26:33,779 - mmdet - INFO - load checkpoint from local path: ms_rcnn_x101_64x4d_fpn_1x_coco_20200206-86ba88d2.pth
2023-02-11 00:26:34,290 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([4, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([4]).
size mismatch for roi_head.mask_head.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 256, 1, 1]).
size mismatch for roi_head.mask_head.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
size mismatch for roi_head.mask_iou_head.fc_mask_iou.weight: copying a param with shape torch.Size([80, 1024]) from checkpoint, the shape in current model is torch.Size([1, 1024]).
size mismatch for roi_head.mask_iou_head.fc_mask_iou.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
2023-02-11 00:26:34,318 - mmdet - INFO - Start running, host: root@autodl-container-88b111a1ac-9e18945e, work_dir: /root/mmdet/work_dirs/balloon_config
2023-02-11 00:26:34,318 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-11 00:26:34,318 - mmdet - INFO - workflow: [('train', 1)], max: 5 epochs
2023-02-11 00:26:34,319 - mmdet - INFO - Checkpoints will be saved to /root/mmdet/work_dirs/balloon_config by HardDiskBackend.
2023-02-11 00:26:37,756 - mmdet - INFO - Epoch [1][1/61]	lr: 2.000e-06, eta: 0:17:10, time: 3.390, data_time: 2.383, memory: 4332, loss_rpn_cls: 0.3905, loss_rpn_bbox: 0.0338, loss_cls: 0.6607, acc: 64.2578, loss_bbox: 0.5176, loss_mask: 1.8466, loss_mask_iou: 0.1495, loss: 3.5988
2023-02-11 00:26:38,709 - mmdet - INFO - Epoch [1][2/61]	lr: 5.996e-06, eta: 0:11:01, time: 0.979, data_time: 0.046, memory: 5301, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0008, loss_cls: 0.6545, acc: 67.7734, loss_bbox: 0.0716, loss_mask: 0.9601, loss_mask_iou: 0.1630, loss: 1.8552
2023-02-11 00:26:39,644 - mmdet - INFO - Epoch [1][3/61]	lr: 9.992e-06, eta: 0:08:53, time: 0.936, data_time: 0.032, memory: 5307, loss_rpn_cls: 0.6010, loss_rpn_bbox: 0.1052, loss_cls: 0.6413, acc: 71.8750, loss_bbox: 0.7829, loss_mask: 1.4323, loss_mask_iou: 0.1249, loss: 3.6876
2023-02-11 00:26:40,487 - mmdet - INFO - Epoch [1][4/61]	lr: 1.399e-05, eta: 0:07:42, time: 0.842, data_time: 0.020, memory: 5307, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0030, loss_cls: 0.6168, acc: 85.9375, loss_bbox: 0.0984, loss_mask: 1.8004, loss_mask_iou: 0.1277, loss: 2.6478
2023-02-11 00:26:41,441 - mmdet - INFO - Epoch [1][5/61]	lr: 1.798e-05, eta: 0:07:06, time: 0.956, data_time: 0.026, memory: 5307, loss_rpn_cls: 0.0164, loss_rpn_bbox: 0.0149, loss_cls: 0.6569, acc: 66.6016, loss_bbox: 0.5867, loss_mask: 2.2131, loss_mask_iou: 0.1252, loss: 3.6132
2023-02-11 00:26:42,379 - mmdet - INFO - Epoch [1][6/61]	lr: 2.198e-05, eta: 0:06:40, time: 0.936, data_time: 0.018, memory: 5307, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0002, loss_cls: 0.5708, acc: 90.0391, loss_bbox: 0.1935, loss_mask: 2.0462, loss_mask_iou: 0.1280, loss: 2.9396
2023-02-11 00:26:43,323 - mmdet - INFO - Epoch [1][7/61]	lr: 2.598e-05, eta: 0:06:22, time: 0.944, data_time: 0.021, memory: 5307, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0027, loss_cls: 0.5957, acc: 92.1875, loss_bbox: 0.1136, loss_mask: 0.6729, loss_mask_iou: 0.2428, loss: 1.6279
2023-02-11 00:26:44,169 - mmdet - INFO - Epoch [1][8/61]	lr: 2.997e-05, eta: 0:06:04, time: 0.846, data_time: 0.022, memory: 5307, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0015, loss_cls: 0.5744, acc: 89.2578, loss_bbox: 0.1743, loss_mask: 0.5245, loss_mask_iou: 0.1898, loss: 1.4648
2023-02-11 00:26:45,011 - mmdet - INFO - Epoch [1][9/61]	lr: 3.397e-05, eta: 0:05:50, time: 0.841, data_time: 0.022, memory: 5307, loss_rpn_cls: 0.0251, loss_rpn_bbox: 0.0031, loss_cls: 0.6268, acc: 74.8047, loss_bbox: 0.1161, loss_mask: 0.4440, loss_mask_iou: 0.2432, loss: 1.4582
2023-02-11 00:26:45,954 - mmdet - INFO - Epoch [1][10/61]	lr: 3.796e-05, eta: 0:05:42, time: 0.943, data_time: 0.025, memory: 5307, loss_rpn_cls: 0.0202, loss_rpn_bbox: 0.0018, loss_cls: 0.5864, acc: 89.8438, loss_bbox: 0.0079, loss_mask: 0.3422, loss_mask_iou: 0.3746, loss: 1.3332
2023-02-11 00:26:46,709 - mmdet - INFO - Epoch [1][11/61]	lr: 4.196e-05, eta: 0:05:30, time: 0.755, data_time: 0.022, memory: 5307, loss_rpn_cls: 0.0708, loss_rpn_bbox: 0.0005, loss_cls: 0.5719, acc: 92.7734, loss_bbox: 0.0034, loss_mask: 0.2753, loss_mask_iou: 0.3595, loss: 1.2813
2023-02-11 00:26:47,603 - mmdet - INFO - Epoch [1][12/61]	lr: 4.596e-05, eta: 0:05:23, time: 0.893, data_time: 0.023, memory: 5307, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0285, loss_cls: 0.5974, acc: 84.3750, loss_bbox: 0.4010, loss_mask: 1.2032, loss_mask_iou: 0.2516, loss: 2.4901
2023-02-11 00:26:48,465 - mmdet - INFO - Epoch [1][13/61]	lr: 4.995e-05, eta: 0:05:17, time: 0.863, data_time: 0.023, memory: 5307, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0052, loss_cls: 0.5855, acc: 86.9141, loss_bbox: 0.1739, loss_mask: 0.4318, loss_mask_iou: 0.2943, loss: 1.5040
2023-02-11 00:26:49,399 - mmdet - INFO - Epoch [1][14/61]	lr: 5.395e-05, eta: 0:05:13, time: 0.934, data_time: 0.021, memory: 5307, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0025, loss_cls: 0.4777, acc: 93.3594, loss_bbox: 0.2383, loss_mask: 0.3921, loss_mask_iou: 0.2332, loss: 1.3438
2023-02-11 00:26:50,137 - mmdet - INFO - Epoch [1][15/61]	lr: 5.794e-05, eta: 0:05:05, time: 0.738, data_time: 0.020, memory: 5307, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0007, loss_cls: 0.5537, acc: 91.4062, loss_bbox: 0.1451, loss_mask: 0.3151, loss_mask_iou: 0.2700, loss: 1.2849
2023-02-11 00:26:50,968 - mmdet - INFO - Epoch [1][16/61]	lr: 6.194e-05, eta: 0:05:00, time: 0.832, data_time: 0.035, memory: 5307, loss_rpn_cls: 0.0299, loss_rpn_bbox: 0.0045, loss_cls: 0.5078, acc: 94.3359, loss_bbox: 0.1581, loss_mask: 0.2785, loss_mask_iou: 0.3036, loss: 1.2824
2023-02-11 00:26:51,912 - mmdet - INFO - Epoch [1][17/61]	lr: 6.594e-05, eta: 0:04:57, time: 0.944, data_time: 0.020, memory: 5307, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0026, loss_cls: 0.4663, acc: 97.4609, loss_bbox: 0.1374, loss_mask: 0.2511, loss_mask_iou: 0.2460, loss: 1.1037
2023-02-11 00:26:52,677 - mmdet - INFO - Epoch [1][18/61]	lr: 6.993e-05, eta: 0:04:52, time: 0.765, data_time: 0.036, memory: 5307, loss_rpn_cls: 0.4852, loss_rpn_bbox: 0.0873, loss_cls: 0.5100, acc: 88.2812, loss_bbox: 0.2428, loss_mask: 1.6639, loss_mask_iou: 0.2350, loss: 3.2242
2023-02-11 00:26:53,521 - mmdet - INFO - Epoch [1][19/61]	lr: 7.393e-05, eta: 0:04:48, time: 0.844, data_time: 0.021, memory: 5307, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0031, loss_cls: 0.3973, acc: 97.4609, loss_bbox: 0.0804, loss_mask: 0.1231, loss_mask_iou: 0.2849, loss: 0.8890
2023-02-11 00:26:54,379 - mmdet - INFO - Epoch [1][20/61]	lr: 7.792e-05, eta: 0:04:45, time: 0.858, data_time: 0.023, memory: 5307, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0011, loss_cls: 0.3856, acc: 95.3125, loss_bbox: 0.1752, loss_mask: 0.1961, loss_mask_iou: 0.2504, loss: 1.0089
2023-02-11 00:26:55,158 - mmdet - INFO - Epoch [1][21/61]	lr: 8.192e-05, eta: 0:04:41, time: 0.780, data_time: 0.026, memory: 5307, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0269, loss_cls: 0.4773, acc: 76.9531, loss_bbox: 0.8719, loss_mask: 0.8037, loss_mask_iou: 0.2201, loss: 2.4031
2023-02-11 00:26:56,014 - mmdet - INFO - Epoch [1][22/61]	lr: 8.592e-05, eta: 0:04:38, time: 0.856, data_time: 0.022, memory: 5307, loss_rpn_cls: 0.0930, loss_rpn_bbox: 0.0113, loss_cls: 0.4084, acc: 95.1172, loss_bbox: 0.1640, loss_mask: 1.5332, loss_mask_iou: 0.1923, loss: 2.4021
2023-02-11 00:26:57,089 - mmdet - INFO - Epoch [1][23/61]	lr: 8.991e-05, eta: 0:04:38, time: 1.078, data_time: 0.082, memory: 5570, loss_rpn_cls: 0.0080, loss_rpn_bbox: 0.0091, loss_cls: 0.4101, acc: 81.6406, loss_bbox: 0.6573, loss_mask: 2.0830, loss_mask_iou: 0.2114, loss: 3.3789
2023-02-11 00:26:57,979 - mmdet - INFO - Epoch [1][24/61]	lr: 9.391e-05, eta: 0:04:36, time: 0.888, data_time: 0.023, memory: 5570, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0051, loss_cls: 0.3342, acc: 88.4766, loss_bbox: 0.4384, loss_mask: 0.1476, loss_mask_iou: 0.2206, loss: 1.1490
2023-02-11 00:26:58,953 - mmdet - INFO - Epoch [1][25/61]	lr: 9.790e-05, eta: 0:04:35, time: 0.973, data_time: 0.038, memory: 5570, loss_rpn_cls: 0.1341, loss_rpn_bbox: 0.0416, loss_cls: 0.4978, acc: 75.0000, loss_bbox: 0.9478, loss_mask: 0.3527, loss_mask_iou: 0.1919, loss: 2.1660
2023-02-11 00:26:59,907 - mmdet - INFO - Epoch [1][26/61]	lr: 1.019e-04, eta: 0:04:34, time: 0.955, data_time: 0.020, memory: 5570, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0020, loss_cls: 0.3113, acc: 95.8984, loss_bbox: 0.1667, loss_mask: 0.1632, loss_mask_iou: 0.1905, loss: 0.8394
2023-02-11 00:27:00,794 - mmdet - INFO - Epoch [1][27/61]	lr: 1.059e-04, eta: 0:04:32, time: 0.887, data_time: 0.029, memory: 5570, loss_rpn_cls: 0.0989, loss_rpn_bbox: 0.0091, loss_cls: 0.3437, acc: 87.8906, loss_bbox: 0.3772, loss_mask: 0.3284, loss_mask_iou: 0.1879, loss: 1.3452
2023-02-11 00:27:01,742 - mmdet - INFO - Epoch [1][28/61]	lr: 1.099e-04, eta: 0:04:31, time: 0.948, data_time: 0.020, memory: 5570, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0021, loss_cls: 0.2661, acc: 96.8750, loss_bbox: 0.0931, loss_mask: 0.1242, loss_mask_iou: 0.2273, loss: 0.7172
2023-02-11 00:27:02,829 - mmdet - INFO - Epoch [1][29/61]	lr: 1.139e-04, eta: 0:04:31, time: 1.087, data_time: 0.098, memory: 5570, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0361, loss_cls: 0.4891, acc: 76.5625, loss_bbox: 0.9281, loss_mask: 0.4850, loss_mask_iou: 0.1446, loss: 2.0884
2023-02-11 00:27:03,624 - mmdet - INFO - Epoch [1][30/61]	lr: 1.179e-04, eta: 0:04:28, time: 0.795, data_time: 0.021, memory: 5570, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0020, loss_cls: 0.2483, acc: 97.2656, loss_bbox: 0.0975, loss_mask: 0.3003, loss_mask_iou: 0.1421, loss: 0.7939
2023-02-11 00:27:04,766 - mmdet - INFO - Epoch [1][31/61]	lr: 1.219e-04, eta: 0:04:28, time: 1.141, data_time: 0.096, memory: 5787, loss_rpn_cls: 0.1248, loss_rpn_bbox: 0.0831, loss_cls: 0.5015, acc: 75.0000, loss_bbox: 0.8106, loss_mask: 0.4516, loss_mask_iou: 0.1371, loss: 2.1088
2023-02-11 00:27:05,712 - mmdet - INFO - Epoch [1][32/61]	lr: 1.259e-04, eta: 0:04:27, time: 0.946, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0371, loss_rpn_bbox: 0.0022, loss_cls: 0.3224, acc: 97.8516, loss_bbox: 0.0338, loss_mask: 0.1229, loss_mask_iou: 0.1873, loss: 0.7057
2023-02-11 00:27:06,575 - mmdet - INFO - Epoch [1][33/61]	lr: 1.299e-04, eta: 0:04:25, time: 0.862, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0032, loss_cls: 0.3005, acc: 90.2344, loss_bbox: 0.3854, loss_mask: 0.1399, loss_mask_iou: 0.1411, loss: 0.9705
2023-02-11 00:27:07,417 - mmdet - INFO - Epoch [1][34/61]	lr: 1.339e-04, eta: 0:04:23, time: 0.842, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0176, loss_rpn_bbox: 0.0012, loss_cls: 0.1792, acc: 96.4844, loss_bbox: 0.1314, loss_mask: 0.0976, loss_mask_iou: 0.1272, loss: 0.5543
2023-02-11 00:27:08,413 - mmdet - INFO - Epoch [1][35/61]	lr: 1.379e-04, eta: 0:04:22, time: 0.996, data_time: 0.029, memory: 5787, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0055, loss_cls: 0.3099, acc: 87.8906, loss_bbox: 0.4374, loss_mask: 0.1579, loss_mask_iou: 0.1162, loss: 1.0278
2023-02-11 00:27:09,362 - mmdet - INFO - Epoch [1][36/61]	lr: 1.419e-04, eta: 0:04:21, time: 0.948, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0007, loss_cls: 0.1583, acc: 97.4609, loss_bbox: 0.0982, loss_mask: 0.0684, loss_mask_iou: 0.1048, loss: 0.4403
2023-02-11 00:27:10,393 - mmdet - INFO - Epoch [1][37/61]	lr: 1.459e-04, eta: 0:04:21, time: 1.031, data_time: 0.041, memory: 5787, loss_rpn_cls: 0.0500, loss_rpn_bbox: 0.0440, loss_cls: 0.4132, acc: 85.5469, loss_bbox: 0.3867, loss_mask: 0.3024, loss_mask_iou: 0.1113, loss: 1.3075
2023-02-11 00:27:11,338 - mmdet - INFO - Epoch [1][38/61]	lr: 1.499e-04, eta: 0:04:19, time: 0.946, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0666, loss_rpn_bbox: 0.0060, loss_cls: 0.2608, acc: 97.2656, loss_bbox: 0.0525, loss_mask: 0.1636, loss_mask_iou: 0.1100, loss: 0.6595
2023-02-11 00:27:12,193 - mmdet - INFO - Epoch [1][39/61]	lr: 1.538e-04, eta: 0:04:18, time: 0.855, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0250, loss_rpn_bbox: 0.0015, loss_cls: 0.2103, acc: 96.6797, loss_bbox: 0.1131, loss_mask: 0.0631, loss_mask_iou: 0.1047, loss: 0.5176
2023-02-11 00:27:13,003 - mmdet - INFO - Epoch [1][40/61]	lr: 1.578e-04, eta: 0:04:16, time: 0.810, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0029, loss_cls: 0.2360, acc: 91.9922, loss_bbox: 0.3008, loss_mask: 0.2174, loss_mask_iou: 0.0645, loss: 0.8237
2023-02-11 00:27:14,036 - mmdet - INFO - Epoch [1][41/61]	lr: 1.618e-04, eta: 0:04:15, time: 1.033, data_time: 0.037, memory: 5787, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0155, loss_cls: 0.3775, acc: 82.4219, loss_bbox: 0.6989, loss_mask: 0.2083, loss_mask_iou: 0.0602, loss: 1.3652
2023-02-11 00:27:15,032 - mmdet - INFO - Epoch [1][42/61]	lr: 1.658e-04, eta: 0:04:14, time: 0.996, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0038, loss_cls: 0.1888, acc: 92.3828, loss_bbox: 0.3002, loss_mask: 0.0797, loss_mask_iou: 0.0543, loss: 0.6269
2023-02-11 00:27:16,011 - mmdet - INFO - Epoch [1][43/61]	lr: 1.698e-04, eta: 0:04:13, time: 0.982, data_time: 0.043, memory: 5787, loss_rpn_cls: 0.0690, loss_rpn_bbox: 0.0088, loss_cls: 0.2209, acc: 95.8984, loss_bbox: 0.1347, loss_mask: 0.2638, loss_mask_iou: 0.0492, loss: 0.7464
2023-02-11 00:27:16,962 - mmdet - INFO - Epoch [1][44/61]	lr: 1.738e-04, eta: 0:04:12, time: 0.951, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0908, loss_rpn_bbox: 0.0034, loss_cls: 0.2184, acc: 96.0938, loss_bbox: 0.1067, loss_mask: 0.0970, loss_mask_iou: 0.0516, loss: 0.5678
2023-02-11 00:27:17,877 - mmdet - INFO - Epoch [1][45/61]	lr: 1.778e-04, eta: 0:04:11, time: 0.912, data_time: 0.040, memory: 5787, loss_rpn_cls: 0.0197, loss_rpn_bbox: 0.0485, loss_cls: 0.4895, acc: 75.0000, loss_bbox: 0.7405, loss_mask: 0.2779, loss_mask_iou: 0.0446, loss: 1.6207
2023-02-11 00:27:18,826 - mmdet - INFO - Epoch [1][46/61]	lr: 1.818e-04, eta: 0:04:10, time: 0.950, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0019, loss_cls: 0.1704, acc: 97.4609, loss_bbox: 0.0784, loss_mask: 0.0781, loss_mask_iou: 0.0338, loss: 0.3723
2023-02-11 00:27:19,778 - mmdet - INFO - Epoch [1][47/61]	lr: 1.858e-04, eta: 0:04:09, time: 0.952, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0024, loss_cls: 0.1195, acc: 95.8984, loss_bbox: 0.1520, loss_mask: 0.0573, loss_mask_iou: 0.0246, loss: 0.3575
2023-02-11 00:27:20,525 - mmdet - INFO - Epoch [1][48/61]	lr: 1.898e-04, eta: 0:04:07, time: 0.747, data_time: 0.033, memory: 5787, loss_rpn_cls: 0.0244, loss_rpn_bbox: 0.0002, loss_cls: 0.1470, acc: 95.3125, loss_bbox: 0.1874, loss_mask: 0.0767, loss_mask_iou: 0.0167, loss: 0.4525
2023-02-11 00:27:21,470 - mmdet - INFO - Epoch [1][49/61]	lr: 1.938e-04, eta: 0:04:06, time: 0.945, data_time: 0.030, memory: 5787, loss_rpn_cls: 0.0274, loss_rpn_bbox: 0.0176, loss_cls: 0.4904, acc: 75.0000, loss_bbox: 0.9245, loss_mask: 0.1845, loss_mask_iou: 0.0169, loss: 1.6613
2023-02-11 00:27:22,342 - mmdet - INFO - Epoch [1][50/61]	lr: 1.978e-04, eta: 0:04:04, time: 0.872, data_time: 0.035, memory: 5787, loss_rpn_cls: 0.2757, loss_rpn_bbox: 0.0433, loss_cls: 0.2209, acc: 95.1172, loss_bbox: 0.0447, loss_mask: 0.3208, loss_mask_iou: 0.0125, loss: 0.9180
2023-02-11 00:27:23,178 - mmdet - INFO - Epoch [1][51/61]	lr: 2.018e-04, eta: 0:04:03, time: 0.836, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0018, loss_rpn_bbox: 0.0022, loss_cls: 0.1321, acc: 95.8984, loss_bbox: 0.1454, loss_mask: 0.0621, loss_mask_iou: 0.0065, loss: 0.3502
2023-02-11 00:27:24,197 - mmdet - INFO - Epoch [1][52/61]	lr: 2.058e-04, eta: 0:04:02, time: 1.019, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0130, loss_rpn_bbox: 0.0103, loss_cls: 0.1267, acc: 97.6562, loss_bbox: 0.0861, loss_mask: 0.0588, loss_mask_iou: 0.0030, loss: 0.2980
2023-02-11 00:27:25,142 - mmdet - INFO - Epoch [1][53/61]	lr: 2.098e-04, eta: 0:04:01, time: 0.946, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0510, loss_rpn_bbox: 0.0013, loss_cls: 0.1584, acc: 98.2422, loss_bbox: 0.0488, loss_mask: 0.0660, loss_mask_iou: 0.0016, loss: 0.3271
2023-02-11 00:27:26,012 - mmdet - INFO - Epoch [1][54/61]	lr: 2.138e-04, eta: 0:04:00, time: 0.870, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0023, loss_cls: 0.1631, acc: 93.9453, loss_bbox: 0.2384, loss_mask: 0.0533, loss_mask_iou: 0.0020, loss: 0.4616
2023-02-11 00:27:26,874 - mmdet - INFO - Epoch [1][55/61]	lr: 2.178e-04, eta: 0:03:58, time: 0.862, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.1098, loss_rpn_bbox: 0.0112, loss_cls: 0.1563, acc: 95.8984, loss_bbox: 0.0877, loss_mask: 0.2370, loss_mask_iou: 0.0023, loss: 0.6042
2023-02-11 00:27:27,819 - mmdet - INFO - Epoch [1][56/61]	lr: 2.218e-04, eta: 0:03:57, time: 0.945, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0009, loss_cls: 0.1331, acc: 94.7266, loss_bbox: 0.2004, loss_mask: 0.0951, loss_mask_iou: 0.0018, loss: 0.4313
2023-02-11 00:27:28,811 - mmdet - INFO - Epoch [1][57/61]	lr: 2.258e-04, eta: 0:03:56, time: 0.992, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0113, loss_cls: 0.2192, acc: 91.0156, loss_bbox: 0.3409, loss_mask: 0.4836, loss_mask_iou: 0.0052, loss: 1.0672
2023-02-11 00:27:29,748 - mmdet - INFO - Epoch [1][58/61]	lr: 2.298e-04, eta: 0:03:55, time: 0.937, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0016, loss_cls: 0.0845, acc: 96.8750, loss_bbox: 0.1087, loss_mask: 0.1511, loss_mask_iou: 0.0027, loss: 0.3501
2023-02-11 00:27:30,725 - mmdet - INFO - Epoch [1][59/61]	lr: 2.338e-04, eta: 0:03:55, time: 0.979, data_time: 0.045, memory: 5787, loss_rpn_cls: 0.0472, loss_rpn_bbox: 0.0041, loss_cls: 0.1709, acc: 93.9453, loss_bbox: 0.1460, loss_mask: 0.1283, loss_mask_iou: 0.0030, loss: 0.4995
2023-02-11 00:27:31,592 - mmdet - INFO - Epoch [1][60/61]	lr: 2.378e-04, eta: 0:03:53, time: 0.868, data_time: 0.018, memory: 5787, loss_rpn_cls: 0.0281, loss_rpn_bbox: 0.0027, loss_cls: 0.1156, acc: 95.1172, loss_bbox: 0.1842, loss_mask: 0.0773, loss_mask_iou: 0.0049, loss: 0.4128
2023-02-11 00:27:32,704 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:27:32,705 - mmdet - INFO - Epoch [1][61/61]	lr: 2.418e-04, eta: 0:03:53, time: 1.112, data_time: 0.062, memory: 5787, loss_rpn_cls: 0.0470, loss_rpn_bbox: 0.0591, loss_cls: 0.5117, acc: 75.0000, loss_bbox: 0.9065, loss_mask: 0.4171, loss_mask_iou: 0.0074, loss: 1.9488
2023-02-11 00:27:32,783 - mmdet - INFO - Saving checkpoint at 1 epochs
2023-02-11 00:27:48,157 - mmdet - INFO - Evaluating bbox...
2023-02-11 00:27:48,334 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.453
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.546
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.527
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.220
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.542
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.750
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.750
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.750
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.675
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.814

2023-02-11 00:27:48,334 - mmdet - INFO - Evaluating segm...
2023-02-11 00:27:48,598 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.656
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.713
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.708
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.371
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.775
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.822
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.822
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.822
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.708
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.894

2023-02-11 00:27:48,601 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:27:48,601 - mmdet - INFO - Epoch(val) [1][13]	bbox_mAP: 0.4530, bbox_mAP_50: 0.5460, bbox_mAP_75: 0.5270, bbox_mAP_s: 0.0050, bbox_mAP_m: 0.2200, bbox_mAP_l: 0.5420, bbox_mAP_copypaste: 0.453 0.546 0.527 0.005 0.220 0.542, segm_mAP: 0.6560, segm_mAP_50: 0.7130, segm_mAP_75: 0.7080, segm_mAP_s: 0.0100, segm_mAP_m: 0.3710, segm_mAP_l: 0.7750, segm_mAP_copypaste: 0.656 0.713 0.708 0.010 0.371 0.775
2023-02-11 00:27:52,008 - mmdet - INFO - Epoch [2][1/61]	lr: 2.458e-04, eta: 0:04:02, time: 3.388, data_time: 2.435, memory: 5787, loss_rpn_cls: 0.0660, loss_rpn_bbox: 0.0017, loss_cls: 0.1877, acc: 94.7266, loss_bbox: 0.1402, loss_mask: 0.0559, loss_mask_iou: 0.0067, loss: 0.4582
2023-02-11 00:27:52,737 - mmdet - INFO - Epoch [2][2/61]	lr: 2.498e-04, eta: 0:04:00, time: 0.729, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0002, loss_cls: 0.1108, acc: 95.3125, loss_bbox: 0.1860, loss_mask: 0.0406, loss_mask_iou: 0.0094, loss: 0.3566
2023-02-11 00:27:53,635 - mmdet - INFO - Epoch [2][3/61]	lr: 2.537e-04, eta: 0:03:58, time: 0.898, data_time: 0.030, memory: 5787, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0163, loss_cls: 0.2284, acc: 87.1094, loss_bbox: 0.4514, loss_mask: 0.1102, loss_mask_iou: 0.0057, loss: 0.8167
2023-02-11 00:27:54,567 - mmdet - INFO - Epoch [2][4/61]	lr: 2.577e-04, eta: 0:03:57, time: 0.932, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0166, loss_rpn_bbox: 0.0007, loss_cls: 0.1418, acc: 97.2656, loss_bbox: 0.0825, loss_mask: 0.0555, loss_mask_iou: 0.0093, loss: 0.3064
2023-02-11 00:27:55,414 - mmdet - INFO - Epoch [2][5/61]	lr: 2.617e-04, eta: 0:03:55, time: 0.846, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0649, loss_rpn_bbox: 0.0037, loss_cls: 0.2092, acc: 90.8203, loss_bbox: 0.3152, loss_mask: 0.0835, loss_mask_iou: 0.0060, loss: 0.6824
2023-02-11 00:27:56,262 - mmdet - INFO - Epoch [2][6/61]	lr: 2.657e-04, eta: 0:03:54, time: 0.848, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0043, loss_cls: 0.1900, acc: 90.6250, loss_bbox: 0.3319, loss_mask: 0.0788, loss_mask_iou: 0.0064, loss: 0.6125
2023-02-11 00:27:57,280 - mmdet - INFO - Epoch [2][7/61]	lr: 2.697e-04, eta: 0:03:53, time: 1.021, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0249, loss_cls: 0.3976, acc: 75.9766, loss_bbox: 0.8660, loss_mask: 0.0933, loss_mask_iou: 0.0040, loss: 1.3888
2023-02-11 00:27:58,221 - mmdet - INFO - Epoch [2][8/61]	lr: 2.737e-04, eta: 0:03:52, time: 0.941, data_time: 0.013, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0014, loss_cls: 0.0755, acc: 96.8750, loss_bbox: 0.1046, loss_mask: 0.1281, loss_mask_iou: 0.0058, loss: 0.3154
2023-02-11 00:27:59,107 - mmdet - INFO - Epoch [2][9/61]	lr: 2.777e-04, eta: 0:03:51, time: 0.884, data_time: 0.030, memory: 5787, loss_rpn_cls: 0.0469, loss_rpn_bbox: 0.0114, loss_cls: 0.1428, acc: 94.3359, loss_bbox: 0.1362, loss_mask: 0.1260, loss_mask_iou: 0.0032, loss: 0.4665
2023-02-11 00:28:00,039 - mmdet - INFO - Epoch [2][10/61]	lr: 2.817e-04, eta: 0:03:49, time: 0.932, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0020, loss_cls: 0.0987, acc: 94.7266, loss_bbox: 0.2047, loss_mask: 0.0775, loss_mask_iou: 0.0034, loss: 0.3862
2023-02-11 00:28:00,810 - mmdet - INFO - Epoch [2][11/61]	lr: 2.857e-04, eta: 0:03:48, time: 0.770, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0005, loss_cls: 0.0945, acc: 94.9219, loss_bbox: 0.1790, loss_mask: 0.0282, loss_mask_iou: 0.0049, loss: 0.3072
2023-02-11 00:28:01,652 - mmdet - INFO - Epoch [2][12/61]	lr: 2.897e-04, eta: 0:03:46, time: 0.842, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0027, loss_cls: 0.0873, acc: 95.3125, loss_bbox: 0.1690, loss_mask: 0.0622, loss_mask_iou: 0.0037, loss: 0.3251
2023-02-11 00:28:02,561 - mmdet - INFO - Epoch [2][13/61]	lr: 2.937e-04, eta: 0:03:45, time: 0.911, data_time: 0.045, memory: 5787, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0054, loss_cls: 0.2012, acc: 88.4766, loss_bbox: 0.3684, loss_mask: 0.0566, loss_mask_iou: 0.0029, loss: 0.6447
2023-02-11 00:28:03,598 - mmdet - INFO - Epoch [2][14/61]	lr: 2.977e-04, eta: 0:03:44, time: 1.036, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0094, loss_cls: 0.3577, acc: 76.1719, loss_bbox: 0.8182, loss_mask: 0.7454, loss_mask_iou: 0.0321, loss: 1.9631
2023-02-11 00:28:04,573 - mmdet - INFO - Epoch [2][15/61]	lr: 3.017e-04, eta: 0:03:43, time: 0.975, data_time: 0.045, memory: 5787, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0011, loss_cls: 0.1216, acc: 95.3125, loss_bbox: 0.1681, loss_mask: 0.0496, loss_mask_iou: 0.0016, loss: 0.3452
2023-02-11 00:28:05,430 - mmdet - INFO - Epoch [2][16/61]	lr: 3.057e-04, eta: 0:03:42, time: 0.857, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0194, loss_rpn_bbox: 0.0020, loss_cls: 0.1219, acc: 94.3359, loss_bbox: 0.2235, loss_mask: 0.0686, loss_mask_iou: 0.0015, loss: 0.4368
2023-02-11 00:28:06,335 - mmdet - INFO - Epoch [2][17/61]	lr: 3.097e-04, eta: 0:03:41, time: 0.905, data_time: 0.057, memory: 5787, loss_rpn_cls: 0.0864, loss_rpn_bbox: 0.0340, loss_cls: 0.1821, acc: 91.6016, loss_bbox: 0.1366, loss_mask: 0.2447, loss_mask_iou: 0.0032, loss: 0.6871
2023-02-11 00:28:07,270 - mmdet - INFO - Epoch [2][18/61]	lr: 3.137e-04, eta: 0:03:40, time: 0.935, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0688, loss_rpn_bbox: 0.0581, loss_cls: 0.4078, acc: 75.1953, loss_bbox: 0.8334, loss_mask: 0.1864, loss_mask_iou: 0.0048, loss: 1.5594
2023-02-11 00:28:08,147 - mmdet - INFO - Epoch [2][19/61]	lr: 3.177e-04, eta: 0:03:39, time: 0.876, data_time: 0.049, memory: 5787, loss_rpn_cls: 0.0169, loss_rpn_bbox: 0.0011, loss_cls: 0.1025, acc: 96.8750, loss_bbox: 0.0927, loss_mask: 0.0401, loss_mask_iou: 0.0009, loss: 0.2542
2023-02-11 00:28:09,094 - mmdet - INFO - Epoch [2][20/61]	lr: 3.217e-04, eta: 0:03:38, time: 0.947, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0488, loss_rpn_bbox: 0.0376, loss_cls: 0.3697, acc: 77.5391, loss_bbox: 0.8716, loss_mask: 0.1042, loss_mask_iou: 0.0039, loss: 1.4359
2023-02-11 00:28:10,140 - mmdet - INFO - Epoch [2][21/61]	lr: 3.257e-04, eta: 0:03:37, time: 1.046, data_time: 0.051, memory: 5787, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0123, loss_cls: 0.0990, acc: 98.2422, loss_bbox: 0.0839, loss_mask: 0.0426, loss_mask_iou: 0.0010, loss: 0.2446
2023-02-11 00:28:11,094 - mmdet - INFO - Epoch [2][22/61]	lr: 3.297e-04, eta: 0:03:36, time: 0.954, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0172, loss_rpn_bbox: 0.0039, loss_cls: 0.1437, acc: 92.1875, loss_bbox: 0.2305, loss_mask: 0.0810, loss_mask_iou: 0.0021, loss: 0.4785
2023-02-11 00:28:12,194 - mmdet - INFO - Epoch [2][23/61]	lr: 3.337e-04, eta: 0:03:35, time: 1.101, data_time: 0.063, memory: 5787, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0453, loss_cls: 0.4298, acc: 75.9766, loss_bbox: 0.8850, loss_mask: 0.2895, loss_mask_iou: 0.0051, loss: 1.6661
2023-02-11 00:28:13,148 - mmdet - INFO - Epoch [2][24/61]	lr: 3.377e-04, eta: 0:03:34, time: 0.953, data_time: 0.014, memory: 5787, loss_rpn_cls: 0.0219, loss_rpn_bbox: 0.0008, loss_cls: 0.0715, acc: 97.2656, loss_bbox: 0.1421, loss_mask: 0.0299, loss_mask_iou: 0.0019, loss: 0.2680
2023-02-11 00:28:14,122 - mmdet - INFO - Epoch [2][25/61]	lr: 3.417e-04, eta: 0:03:33, time: 0.974, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0022, loss_cls: 0.0740, acc: 98.0469, loss_bbox: 0.1067, loss_mask: 0.0246, loss_mask_iou: 0.0013, loss: 0.2087
2023-02-11 00:28:15,034 - mmdet - INFO - Epoch [2][26/61]	lr: 3.457e-04, eta: 0:03:32, time: 0.915, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0477, loss_rpn_bbox: 0.0086, loss_cls: 0.2772, acc: 81.0547, loss_bbox: 0.8313, loss_mask: 0.1309, loss_mask_iou: 0.0032, loss: 1.2990
2023-02-11 00:28:16,004 - mmdet - INFO - Epoch [2][27/61]	lr: 3.497e-04, eta: 0:03:31, time: 0.969, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0024, loss_cls: 0.1443, acc: 95.5078, loss_bbox: 0.1393, loss_mask: 0.0833, loss_mask_iou: 0.0018, loss: 0.3756
2023-02-11 00:28:16,957 - mmdet - INFO - Epoch [2][28/61]	lr: 3.536e-04, eta: 0:03:30, time: 0.951, data_time: 0.014, memory: 5787, loss_rpn_cls: 0.0130, loss_rpn_bbox: 0.0077, loss_cls: 0.1410, acc: 96.4844, loss_bbox: 0.1465, loss_mask: 0.0943, loss_mask_iou: 0.0025, loss: 0.4050
2023-02-11 00:28:17,835 - mmdet - INFO - Epoch [2][29/61]	lr: 3.576e-04, eta: 0:03:29, time: 0.878, data_time: 0.043, memory: 5787, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0020, loss_cls: 0.0788, acc: 95.8984, loss_bbox: 0.1578, loss_mask: 0.0957, loss_mask_iou: 0.0018, loss: 0.3439
2023-02-11 00:28:18,771 - mmdet - INFO - Epoch [2][30/61]	lr: 3.616e-04, eta: 0:03:28, time: 0.936, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0007, loss_cls: 0.0933, acc: 94.7266, loss_bbox: 0.2039, loss_mask: 0.0667, loss_mask_iou: 0.0021, loss: 0.3667
2023-02-11 00:28:19,740 - mmdet - INFO - Epoch [2][31/61]	lr: 3.656e-04, eta: 0:03:27, time: 0.970, data_time: 0.050, memory: 5787, loss_rpn_cls: 0.1685, loss_rpn_bbox: 0.0332, loss_cls: 0.2916, acc: 84.7656, loss_bbox: 0.7467, loss_mask: 0.2537, loss_mask_iou: 0.0040, loss: 1.4976
2023-02-11 00:28:20,735 - mmdet - INFO - Epoch [2][32/61]	lr: 3.696e-04, eta: 0:03:26, time: 0.994, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0037, loss_cls: 0.1697, acc: 93.1641, loss_bbox: 0.5086, loss_mask: 0.1172, loss_mask_iou: 0.0037, loss: 0.8045
2023-02-11 00:28:21,597 - mmdet - INFO - Epoch [2][33/61]	lr: 3.736e-04, eta: 0:03:25, time: 0.862, data_time: 0.037, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0026, loss_cls: 0.0504, acc: 99.4141, loss_bbox: 0.0653, loss_mask: 0.0359, loss_mask_iou: 0.0009, loss: 0.1555
2023-02-11 00:28:22,656 - mmdet - INFO - Epoch [2][34/61]	lr: 3.776e-04, eta: 0:03:24, time: 1.059, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0230, loss_rpn_bbox: 0.0380, loss_cls: 0.2878, acc: 86.5234, loss_bbox: 0.7443, loss_mask: 0.1750, loss_mask_iou: 0.0039, loss: 1.2721
2023-02-11 00:28:23,554 - mmdet - INFO - Epoch [2][35/61]	lr: 3.816e-04, eta: 0:03:23, time: 0.898, data_time: 0.030, memory: 5787, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0069, loss_cls: 0.1257, acc: 96.6797, loss_bbox: 0.4126, loss_mask: 0.0375, loss_mask_iou: 0.0004, loss: 0.5848
2023-02-11 00:28:24,358 - mmdet - INFO - Epoch [2][36/61]	lr: 3.856e-04, eta: 0:03:21, time: 0.804, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0019, loss_cls: 0.1020, acc: 99.0234, loss_bbox: 0.2486, loss_mask: 0.0691, loss_mask_iou: 0.0006, loss: 0.4279
2023-02-11 00:28:25,255 - mmdet - INFO - Epoch [2][37/61]	lr: 3.896e-04, eta: 0:03:20, time: 0.896, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0044, loss_cls: 0.1834, acc: 91.9922, loss_bbox: 0.4040, loss_mask: 0.2936, loss_mask_iou: 0.0055, loss: 0.8965
2023-02-11 00:28:26,207 - mmdet - INFO - Epoch [2][38/61]	lr: 3.936e-04, eta: 0:03:19, time: 0.952, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.1017, loss_rpn_bbox: 0.0052, loss_cls: 0.1297, acc: 98.8281, loss_bbox: 0.1632, loss_mask: 0.0538, loss_mask_iou: 0.0067, loss: 0.4603
2023-02-11 00:28:27,210 - mmdet - INFO - Epoch [2][39/61]	lr: 3.976e-04, eta: 0:03:18, time: 1.003, data_time: 0.084, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0003, loss_cls: 0.0807, acc: 97.6562, loss_bbox: 0.1913, loss_mask: 0.1386, loss_mask_iou: 0.0011, loss: 0.4120
2023-02-11 00:28:28,231 - mmdet - INFO - Epoch [2][40/61]	lr: 4.016e-04, eta: 0:03:17, time: 1.021, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0234, loss_rpn_bbox: 0.0098, loss_cls: 0.1977, acc: 93.7500, loss_bbox: 0.5753, loss_mask: 0.1114, loss_mask_iou: 0.0017, loss: 0.9192
2023-02-11 00:28:29,245 - mmdet - INFO - Epoch [2][41/61]	lr: 4.056e-04, eta: 0:03:17, time: 1.014, data_time: 0.088, memory: 5787, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0026, loss_cls: 0.0495, acc: 99.2188, loss_bbox: 0.1384, loss_mask: 0.0325, loss_mask_iou: 0.0003, loss: 0.2267
2023-02-11 00:28:30,307 - mmdet - INFO - Epoch [2][42/61]	lr: 4.096e-04, eta: 0:03:16, time: 1.062, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0319, loss_rpn_bbox: 0.0653, loss_cls: 0.2954, acc: 94.1406, loss_bbox: 0.6809, loss_mask: 0.1419, loss_mask_iou: 0.0012, loss: 1.2168
2023-02-11 00:28:31,159 - mmdet - INFO - Epoch [2][43/61]	lr: 4.136e-04, eta: 0:03:15, time: 0.852, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0006, loss_cls: 0.0866, acc: 98.0469, loss_bbox: 0.1240, loss_mask: 0.0993, loss_mask_iou: 0.0003, loss: 0.3109
2023-02-11 00:28:32,020 - mmdet - INFO - Epoch [2][44/61]	lr: 4.176e-04, eta: 0:03:13, time: 0.862, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0012, loss_cls: 0.1071, acc: 98.0469, loss_bbox: 0.1182, loss_mask: 0.0534, loss_mask_iou: 0.0010, loss: 0.2837
2023-02-11 00:28:32,929 - mmdet - INFO - Epoch [2][45/61]	lr: 4.216e-04, eta: 0:03:12, time: 0.908, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0438, loss_cls: 0.2586, acc: 94.5312, loss_bbox: 0.7011, loss_mask: 0.1132, loss_mask_iou: 0.0019, loss: 1.1203
2023-02-11 00:28:33,716 - mmdet - INFO - Epoch [2][46/61]	lr: 4.256e-04, eta: 0:03:11, time: 0.787, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0156, loss_cls: 0.1943, acc: 96.6797, loss_bbox: 0.7395, loss_mask: 0.0632, loss_mask_iou: 0.0024, loss: 1.0152
2023-02-11 00:28:34,682 - mmdet - INFO - Epoch [2][47/61]	lr: 4.296e-04, eta: 0:03:10, time: 0.966, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0032, loss_cls: 0.0602, acc: 99.0234, loss_bbox: 0.1063, loss_mask: 0.0297, loss_mask_iou: 0.0011, loss: 0.2025
2023-02-11 00:28:35,521 - mmdet - INFO - Epoch [2][48/61]	lr: 4.336e-04, eta: 0:03:09, time: 0.839, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0026, loss_cls: 0.0507, acc: 99.2188, loss_bbox: 0.1260, loss_mask: 0.0399, loss_mask_iou: 0.0003, loss: 0.2196
2023-02-11 00:28:36,300 - mmdet - INFO - Epoch [2][49/61]	lr: 4.376e-04, eta: 0:03:07, time: 0.779, data_time: 0.038, memory: 5787, loss_rpn_cls: 0.0336, loss_rpn_bbox: 0.0003, loss_cls: 0.0603, acc: 100.0000, loss_bbox: 0.0523, loss_mask: 0.1094, loss_mask_iou: 0.0010, loss: 0.2569
2023-02-11 00:28:37,257 - mmdet - INFO - Epoch [2][50/61]	lr: 4.416e-04, eta: 0:03:07, time: 0.956, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0004, loss_cls: 0.0365, acc: 99.8047, loss_bbox: 0.0714, loss_mask: 0.0471, loss_mask_iou: 0.0010, loss: 0.1610
2023-02-11 00:28:38,077 - mmdet - INFO - Epoch [2][51/61]	lr: 4.456e-04, eta: 0:03:05, time: 0.821, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0331, loss_rpn_bbox: 0.0610, loss_cls: 0.3166, acc: 87.3047, loss_bbox: 0.7002, loss_mask: 0.1982, loss_mask_iou: 0.0019, loss: 1.3110
2023-02-11 00:28:38,923 - mmdet - INFO - Epoch [2][52/61]	lr: 4.496e-04, eta: 0:03:04, time: 0.846, data_time: 0.019, memory: 5787, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0040, loss_cls: 0.0689, acc: 98.8281, loss_bbox: 0.1338, loss_mask: 0.0472, loss_mask_iou: 0.0008, loss: 0.2646
2023-02-11 00:28:39,873 - mmdet - INFO - Epoch [2][53/61]	lr: 4.535e-04, eta: 0:03:03, time: 0.949, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0247, loss_rpn_bbox: 0.0017, loss_cls: 0.0746, acc: 99.6094, loss_bbox: 0.0800, loss_mask: 0.0394, loss_mask_iou: 0.0010, loss: 0.2213
2023-02-11 00:28:40,823 - mmdet - INFO - Epoch [2][54/61]	lr: 4.575e-04, eta: 0:03:02, time: 0.951, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0018, loss_cls: 0.0669, acc: 99.2188, loss_bbox: 0.0938, loss_mask: 0.0250, loss_mask_iou: 0.0007, loss: 0.1958
2023-02-11 00:28:41,768 - mmdet - INFO - Epoch [2][55/61]	lr: 4.615e-04, eta: 0:03:01, time: 0.945, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0127, loss_cls: 0.2236, acc: 91.0156, loss_bbox: 0.6597, loss_mask: 0.1316, loss_mask_iou: 0.0017, loss: 1.0295
2023-02-11 00:28:42,723 - mmdet - INFO - Epoch [2][56/61]	lr: 4.655e-04, eta: 0:03:00, time: 0.955, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0176, loss_rpn_bbox: 0.0017, loss_cls: 0.0639, acc: 99.6094, loss_bbox: 0.0956, loss_mask: 0.0362, loss_mask_iou: 0.0004, loss: 0.2153
2023-02-11 00:28:43,701 - mmdet - INFO - Epoch [2][57/61]	lr: 4.695e-04, eta: 0:02:59, time: 0.979, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0031, loss_cls: 0.0840, acc: 98.2422, loss_bbox: 0.2122, loss_mask: 0.0396, loss_mask_iou: 0.0006, loss: 0.3410
2023-02-11 00:28:44,701 - mmdet - INFO - Epoch [2][58/61]	lr: 4.735e-04, eta: 0:02:58, time: 1.001, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0117, loss_cls: 0.1175, acc: 95.8984, loss_bbox: 0.3180, loss_mask: 0.2111, loss_mask_iou: 0.0010, loss: 0.6626
2023-02-11 00:28:45,503 - mmdet - INFO - Epoch [2][59/61]	lr: 4.775e-04, eta: 0:02:57, time: 0.801, data_time: 0.018, memory: 5787, loss_rpn_cls: 0.0179, loss_rpn_bbox: 0.0023, loss_cls: 0.0325, acc: 99.8047, loss_bbox: 0.0599, loss_mask: 0.0282, loss_mask_iou: 0.0002, loss: 0.1410
2023-02-11 00:28:46,486 - mmdet - INFO - Epoch [2][60/61]	lr: 4.815e-04, eta: 0:02:56, time: 0.984, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0090, loss_cls: 0.1791, acc: 95.1172, loss_bbox: 0.5627, loss_mask: 0.1877, loss_mask_iou: 0.0026, loss: 0.9413
2023-02-11 00:28:47,351 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:28:47,352 - mmdet - INFO - Epoch [2][61/61]	lr: 4.855e-04, eta: 0:02:55, time: 0.865, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0008, loss_cls: 0.0391, acc: 99.6094, loss_bbox: 0.1123, loss_mask: 0.0477, loss_mask_iou: 0.0002, loss: 0.2011
2023-02-11 00:28:47,431 - mmdet - INFO - Saving checkpoint at 2 epochs
2023-02-11 00:28:59,057 - mmdet - INFO - Evaluating bbox...
2023-02-11 00:28:59,166 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.713
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.890
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.846
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.034
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.629
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.772
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.766
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.766
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.766
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.100
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.692
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.828

2023-02-11 00:28:59,166 - mmdet - INFO - Evaluating segm...
2023-02-11 00:28:59,349 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.795
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.881
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.879
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.017
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.661
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.866
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.906

2023-02-11 00:28:59,351 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:28:59,351 - mmdet - INFO - Epoch(val) [2][13]	bbox_mAP: 0.7130, bbox_mAP_50: 0.8900, bbox_mAP_75: 0.8460, bbox_mAP_s: 0.0340, bbox_mAP_m: 0.6290, bbox_mAP_l: 0.7720, bbox_mAP_copypaste: 0.713 0.890 0.846 0.034 0.629 0.772, segm_mAP: 0.7950, segm_mAP_50: 0.8810, segm_mAP_75: 0.8790, segm_mAP_s: 0.0170, segm_mAP_m: 0.6610, segm_mAP_l: 0.8660, segm_mAP_copypaste: 0.795 0.881 0.879 0.017 0.661 0.866
2023-02-11 00:29:02,511 - mmdet - INFO - Epoch [3][1/61]	lr: 4.895e-04, eta: 0:02:57, time: 3.140, data_time: 2.301, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0003, loss_cls: 0.0582, acc: 98.6328, loss_bbox: 0.1427, loss_mask: 0.0654, loss_mask_iou: 0.0002, loss: 0.2668
2023-02-11 00:29:03,356 - mmdet - INFO - Epoch [3][2/61]	lr: 4.935e-04, eta: 0:02:56, time: 0.846, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0009, loss_cls: 0.0529, acc: 99.0234, loss_bbox: 0.0928, loss_mask: 0.0309, loss_mask_iou: 0.0004, loss: 0.1861
2023-02-11 00:29:04,315 - mmdet - INFO - Epoch [3][3/61]	lr: 4.975e-04, eta: 0:02:55, time: 0.959, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0008, loss_cls: 0.0608, acc: 98.0469, loss_bbox: 0.1660, loss_mask: 0.0779, loss_mask_iou: 0.0004, loss: 0.3060
2023-02-11 00:29:05,266 - mmdet - INFO - Epoch [3][4/61]	lr: 5.015e-04, eta: 0:02:54, time: 0.951, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0011, loss_rpn_bbox: 0.0023, loss_cls: 0.0291, acc: 99.8047, loss_bbox: 0.0757, loss_mask: 0.0353, loss_mask_iou: 0.0005, loss: 0.1440
2023-02-11 00:29:06,169 - mmdet - INFO - Epoch [3][5/61]	lr: 5.055e-04, eta: 0:02:53, time: 0.904, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0043, loss_cls: 0.1292, acc: 94.3359, loss_bbox: 0.2935, loss_mask: 0.2751, loss_mask_iou: 0.0050, loss: 0.7113
2023-02-11 00:29:07,170 - mmdet - INFO - Epoch [3][6/61]	lr: 5.095e-04, eta: 0:02:52, time: 1.000, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0140, loss_rpn_bbox: 0.0084, loss_cls: 0.1236, acc: 94.1406, loss_bbox: 0.3145, loss_mask: 0.1659, loss_mask_iou: 0.0015, loss: 0.6280
2023-02-11 00:29:08,205 - mmdet - INFO - Epoch [3][7/61]	lr: 5.135e-04, eta: 0:02:51, time: 1.036, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0085, loss_cls: 0.1589, acc: 95.8984, loss_bbox: 0.5131, loss_mask: 0.2759, loss_mask_iou: 0.0156, loss: 0.9736
2023-02-11 00:29:09,198 - mmdet - INFO - Epoch [3][8/61]	lr: 5.175e-04, eta: 0:02:50, time: 0.992, data_time: 0.038, memory: 5787, loss_rpn_cls: 0.0236, loss_rpn_bbox: 0.0054, loss_cls: 0.0834, acc: 99.6094, loss_bbox: 0.1482, loss_mask: 0.0682, loss_mask_iou: 0.0045, loss: 0.3332
2023-02-11 00:29:10,148 - mmdet - INFO - Epoch [3][9/61]	lr: 5.215e-04, eta: 0:02:49, time: 0.952, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0350, loss_rpn_bbox: 0.0015, loss_cls: 0.0779, acc: 98.6328, loss_bbox: 0.0425, loss_mask: 0.0395, loss_mask_iou: 0.0005, loss: 0.1968
2023-02-11 00:29:11,127 - mmdet - INFO - Epoch [3][10/61]	lr: 5.255e-04, eta: 0:02:48, time: 0.977, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0299, loss_rpn_bbox: 0.0328, loss_cls: 0.2402, acc: 90.8203, loss_bbox: 0.5660, loss_mask: 0.1092, loss_mask_iou: 0.0019, loss: 0.9799
2023-02-11 00:29:12,026 - mmdet - INFO - Epoch [3][11/61]	lr: 5.295e-04, eta: 0:02:47, time: 0.899, data_time: 0.030, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0182, loss_cls: 0.0833, acc: 98.0469, loss_bbox: 0.2491, loss_mask: 0.0857, loss_mask_iou: 0.0006, loss: 0.4373
2023-02-11 00:29:12,971 - mmdet - INFO - Epoch [3][12/61]	lr: 5.335e-04, eta: 0:02:46, time: 0.945, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0002, loss_cls: 0.0387, acc: 99.6094, loss_bbox: 0.0952, loss_mask: 0.1146, loss_mask_iou: 0.0003, loss: 0.2573
2023-02-11 00:29:13,976 - mmdet - INFO - Epoch [3][13/61]	lr: 5.375e-04, eta: 0:02:45, time: 1.004, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0068, loss_rpn_bbox: 0.0038, loss_cls: 0.0825, acc: 97.8516, loss_bbox: 0.2798, loss_mask: 0.1215, loss_mask_iou: 0.0015, loss: 0.4959
2023-02-11 00:29:15,016 - mmdet - INFO - Epoch [3][14/61]	lr: 5.415e-04, eta: 0:02:44, time: 1.043, data_time: 0.030, memory: 5787, loss_rpn_cls: 0.0264, loss_rpn_bbox: 0.0110, loss_cls: 0.1230, acc: 96.2891, loss_bbox: 0.3676, loss_mask: 0.0862, loss_mask_iou: 0.0014, loss: 0.6156
2023-02-11 00:29:15,970 - mmdet - INFO - Epoch [3][15/61]	lr: 5.455e-04, eta: 0:02:43, time: 0.954, data_time: 0.019, memory: 5787, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0029, loss_cls: 0.0188, acc: 99.8047, loss_bbox: 0.0568, loss_mask: 0.0338, loss_mask_iou: 0.0002, loss: 0.1133
2023-02-11 00:29:16,940 - mmdet - INFO - Epoch [3][16/61]	lr: 5.495e-04, eta: 0:02:42, time: 0.970, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0014, loss_cls: 0.0341, acc: 99.8047, loss_bbox: 0.0525, loss_mask: 0.0347, loss_mask_iou: 0.0003, loss: 0.1242
2023-02-11 00:29:17,902 - mmdet - INFO - Epoch [3][17/61]	lr: 5.534e-04, eta: 0:02:41, time: 0.962, data_time: 0.018, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0010, loss_cls: 0.0337, acc: 99.4141, loss_bbox: 0.0693, loss_mask: 0.0270, loss_mask_iou: 0.0004, loss: 0.1317
2023-02-11 00:29:18,819 - mmdet - INFO - Epoch [3][18/61]	lr: 5.574e-04, eta: 0:02:40, time: 0.917, data_time: 0.035, memory: 5787, loss_rpn_cls: 0.0563, loss_rpn_bbox: 0.0305, loss_cls: 0.0838, acc: 98.2422, loss_bbox: 0.1716, loss_mask: 0.1787, loss_mask_iou: 0.0016, loss: 0.5223
2023-02-11 00:29:19,671 - mmdet - INFO - Epoch [3][19/61]	lr: 5.614e-04, eta: 0:02:39, time: 0.850, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0032, loss_cls: 0.0207, acc: 99.8047, loss_bbox: 0.0559, loss_mask: 0.0427, loss_mask_iou: 0.0003, loss: 0.1240
2023-02-11 00:29:20,564 - mmdet - INFO - Epoch [3][20/61]	lr: 5.654e-04, eta: 0:02:38, time: 0.894, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0043, loss_cls: 0.0663, acc: 98.0469, loss_bbox: 0.1635, loss_mask: 0.0855, loss_mask_iou: 0.0004, loss: 0.3200
2023-02-11 00:29:21,530 - mmdet - INFO - Epoch [3][21/61]	lr: 5.694e-04, eta: 0:02:37, time: 0.965, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0132, loss_cls: 0.1445, acc: 95.3125, loss_bbox: 0.3542, loss_mask: 0.1134, loss_mask_iou: 0.0015, loss: 0.6270
2023-02-11 00:29:22,491 - mmdet - INFO - Epoch [3][22/61]	lr: 5.734e-04, eta: 0:02:36, time: 0.961, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0214, loss_rpn_bbox: 0.0016, loss_cls: 0.0537, acc: 99.4141, loss_bbox: 0.0720, loss_mask: 0.0605, loss_mask_iou: 0.0005, loss: 0.2097
2023-02-11 00:29:23,434 - mmdet - INFO - Epoch [3][23/61]	lr: 5.774e-04, eta: 0:02:35, time: 0.945, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0026, loss_cls: 0.0287, acc: 99.2188, loss_bbox: 0.0627, loss_mask: 0.0591, loss_mask_iou: 0.0002, loss: 0.1534
2023-02-11 00:29:24,346 - mmdet - INFO - Epoch [3][24/61]	lr: 5.814e-04, eta: 0:02:34, time: 0.911, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0186, loss_rpn_bbox: 0.0048, loss_cls: 0.0594, acc: 98.4375, loss_bbox: 0.1428, loss_mask: 0.0537, loss_mask_iou: 0.0004, loss: 0.2796
2023-02-11 00:29:25,130 - mmdet - INFO - Epoch [3][25/61]	lr: 5.854e-04, eta: 0:02:33, time: 0.785, data_time: 0.036, memory: 5787, loss_rpn_cls: 0.0388, loss_rpn_bbox: 0.0006, loss_cls: 0.0250, acc: 100.0000, loss_bbox: 0.0191, loss_mask: 0.0757, loss_mask_iou: 0.0002, loss: 0.1594
2023-02-11 00:29:25,944 - mmdet - INFO - Epoch [3][26/61]	lr: 5.894e-04, eta: 0:02:32, time: 0.814, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0012, loss_cls: 0.0211, acc: 99.4141, loss_bbox: 0.0199, loss_mask: 0.0317, loss_mask_iou: 0.0006, loss: 0.0753
2023-02-11 00:29:26,889 - mmdet - INFO - Epoch [3][27/61]	lr: 5.934e-04, eta: 0:02:31, time: 0.944, data_time: 0.043, memory: 5787, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0446, loss_cls: 0.1562, acc: 94.1406, loss_bbox: 0.3068, loss_mask: 0.1323, loss_mask_iou: 0.0013, loss: 0.6446
2023-02-11 00:29:27,848 - mmdet - INFO - Epoch [3][28/61]	lr: 5.974e-04, eta: 0:02:30, time: 0.959, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0147, loss_rpn_bbox: 0.0444, loss_cls: 0.2256, acc: 90.6250, loss_bbox: 0.3053, loss_mask: 0.0919, loss_mask_iou: 0.0024, loss: 0.6842
2023-02-11 00:29:28,688 - mmdet - INFO - Epoch [3][29/61]	lr: 6.014e-04, eta: 0:02:29, time: 0.840, data_time: 0.044, memory: 5787, loss_rpn_cls: 0.0639, loss_rpn_bbox: 0.0636, loss_cls: 0.2296, acc: 91.2109, loss_bbox: 0.3572, loss_mask: 0.2272, loss_mask_iou: 0.0030, loss: 0.9444
2023-02-11 00:29:29,641 - mmdet - INFO - Epoch [3][30/61]	lr: 6.054e-04, eta: 0:02:28, time: 0.953, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0026, loss_cls: 0.0548, acc: 97.4609, loss_bbox: 0.0809, loss_mask: 0.1001, loss_mask_iou: 0.0008, loss: 0.2392
2023-02-11 00:29:30,618 - mmdet - INFO - Epoch [3][31/61]	lr: 6.094e-04, eta: 0:02:27, time: 0.977, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0037, loss_cls: 0.0402, acc: 99.4141, loss_bbox: 0.0888, loss_mask: 0.0674, loss_mask_iou: 0.0004, loss: 0.2080
2023-02-11 00:29:31,438 - mmdet - INFO - Epoch [3][32/61]	lr: 6.134e-04, eta: 0:02:26, time: 0.820, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0022, loss_cls: 0.0385, acc: 99.0234, loss_bbox: 0.0918, loss_mask: 0.0905, loss_mask_iou: 0.0006, loss: 0.2237
2023-02-11 00:29:32,393 - mmdet - INFO - Epoch [3][33/61]	lr: 6.174e-04, eta: 0:02:25, time: 0.955, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0309, loss_rpn_bbox: 0.0033, loss_cls: 0.0734, acc: 97.4609, loss_bbox: 0.0528, loss_mask: 0.0519, loss_mask_iou: 0.0006, loss: 0.2129
2023-02-11 00:29:33,378 - mmdet - INFO - Epoch [3][34/61]	lr: 6.214e-04, eta: 0:02:24, time: 0.985, data_time: 0.046, memory: 5787, loss_rpn_cls: 0.0536, loss_rpn_bbox: 0.0375, loss_cls: 0.1859, acc: 93.3594, loss_bbox: 0.3110, loss_mask: 0.1901, loss_mask_iou: 0.0011, loss: 0.7792
2023-02-11 00:29:34,128 - mmdet - INFO - Epoch [3][35/61]	lr: 6.254e-04, eta: 0:02:23, time: 0.753, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0008, loss_cls: 0.0248, acc: 99.0234, loss_bbox: 0.0320, loss_mask: 0.0249, loss_mask_iou: 0.0002, loss: 0.0831
2023-02-11 00:29:34,992 - mmdet - INFO - Epoch [3][36/61]	lr: 6.294e-04, eta: 0:02:22, time: 0.862, data_time: 0.019, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0012, loss_cls: 0.0103, acc: 100.0000, loss_bbox: 0.0375, loss_mask: 0.0390, loss_mask_iou: 0.0004, loss: 0.0885
2023-02-11 00:29:36,022 - mmdet - INFO - Epoch [3][37/61]	lr: 6.334e-04, eta: 0:02:21, time: 1.029, data_time: 0.036, memory: 5787, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0199, loss_cls: 0.1884, acc: 91.7969, loss_bbox: 0.3131, loss_mask: 0.0742, loss_mask_iou: 0.0012, loss: 0.6013
2023-02-11 00:29:36,910 - mmdet - INFO - Epoch [3][38/61]	lr: 6.374e-04, eta: 0:02:20, time: 0.890, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0082, loss_cls: 0.0397, acc: 98.2422, loss_bbox: 0.1265, loss_mask: 0.0355, loss_mask_iou: 0.0004, loss: 0.2105
2023-02-11 00:29:37,866 - mmdet - INFO - Epoch [3][39/61]	lr: 6.414e-04, eta: 0:02:19, time: 0.954, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0033, loss_cls: 0.0210, acc: 99.4141, loss_bbox: 0.0313, loss_mask: 0.0232, loss_mask_iou: 0.0004, loss: 0.0792
2023-02-11 00:29:38,804 - mmdet - INFO - Epoch [3][40/61]	lr: 6.454e-04, eta: 0:02:18, time: 0.938, data_time: 0.032, memory: 5787, loss_rpn_cls: 0.0183, loss_rpn_bbox: 0.0088, loss_cls: 0.1177, acc: 97.2656, loss_bbox: 0.2334, loss_mask: 0.1042, loss_mask_iou: 0.0015, loss: 0.4839
2023-02-11 00:29:39,782 - mmdet - INFO - Epoch [3][41/61]	lr: 6.494e-04, eta: 0:02:17, time: 0.978, data_time: 0.027, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0085, loss_cls: 0.0928, acc: 96.0938, loss_bbox: 0.2013, loss_mask: 0.1394, loss_mask_iou: 0.0014, loss: 0.4435
2023-02-11 00:29:40,574 - mmdet - INFO - Epoch [3][42/61]	lr: 6.533e-04, eta: 0:02:16, time: 0.793, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0110, loss_cls: 0.0963, acc: 96.8750, loss_bbox: 0.2822, loss_mask: 0.0561, loss_mask_iou: 0.0008, loss: 0.4464
2023-02-11 00:29:41,483 - mmdet - INFO - Epoch [3][43/61]	lr: 6.573e-04, eta: 0:02:15, time: 0.908, data_time: 0.077, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0024, loss_cls: 0.0206, acc: 99.2188, loss_bbox: 0.0219, loss_mask: 0.0640, loss_mask_iou: 0.0007, loss: 0.1096
2023-02-11 00:29:42,421 - mmdet - INFO - Epoch [3][44/61]	lr: 6.613e-04, eta: 0:02:14, time: 0.938, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0694, loss_rpn_bbox: 0.0024, loss_cls: 0.0248, acc: 99.8047, loss_bbox: 0.0394, loss_mask: 0.0277, loss_mask_iou: 0.0003, loss: 0.1639
2023-02-11 00:29:43,559 - mmdet - INFO - Epoch [3][45/61]	lr: 6.653e-04, eta: 0:02:13, time: 1.139, data_time: 0.076, memory: 5787, loss_rpn_cls: 0.0317, loss_rpn_bbox: 0.0701, loss_cls: 0.1817, acc: 93.7500, loss_bbox: 0.2861, loss_mask: 0.1067, loss_mask_iou: 0.0009, loss: 0.6772
2023-02-11 00:29:44,577 - mmdet - INFO - Epoch [3][46/61]	lr: 6.693e-04, eta: 0:02:12, time: 1.017, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0131, loss_cls: 0.0232, acc: 99.2188, loss_bbox: 0.0378, loss_mask: 0.0299, loss_mask_iou: 0.0004, loss: 0.1091
2023-02-11 00:29:45,471 - mmdet - INFO - Epoch [3][47/61]	lr: 6.733e-04, eta: 0:02:11, time: 0.894, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0184, loss_rpn_bbox: 0.0126, loss_cls: 0.0937, acc: 95.7031, loss_bbox: 0.1645, loss_mask: 0.1901, loss_mask_iou: 0.0012, loss: 0.4805
2023-02-11 00:29:46,438 - mmdet - INFO - Epoch [3][48/61]	lr: 6.773e-04, eta: 0:02:10, time: 0.968, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0014, loss_cls: 0.0258, acc: 99.6094, loss_bbox: 0.0530, loss_mask: 0.0228, loss_mask_iou: 0.0002, loss: 0.1031
2023-02-11 00:29:47,327 - mmdet - INFO - Epoch [3][49/61]	lr: 6.813e-04, eta: 0:02:09, time: 0.889, data_time: 0.033, memory: 5787, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0006, loss_cls: 0.0319, acc: 98.8281, loss_bbox: 0.0673, loss_mask: 0.0495, loss_mask_iou: 0.0004, loss: 0.1625
2023-02-11 00:29:48,286 - mmdet - INFO - Epoch [3][50/61]	lr: 6.853e-04, eta: 0:02:08, time: 0.961, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0010, loss_cls: 0.0091, acc: 100.0000, loss_bbox: 0.0286, loss_mask: 0.0389, loss_mask_iou: 0.0002, loss: 0.0783
2023-02-11 00:29:49,360 - mmdet - INFO - Epoch [3][51/61]	lr: 6.893e-04, eta: 0:02:07, time: 1.074, data_time: 0.038, memory: 5787, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0320, loss_cls: 0.1471, acc: 94.1406, loss_bbox: 0.3146, loss_mask: 0.1373, loss_mask_iou: 0.0008, loss: 0.6345
2023-02-11 00:29:50,215 - mmdet - INFO - Epoch [3][52/61]	lr: 6.933e-04, eta: 0:02:06, time: 0.853, data_time: 0.018, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0010, loss_cls: 0.0671, acc: 97.6562, loss_bbox: 0.0241, loss_mask: 0.0450, loss_mask_iou: 0.0008, loss: 0.1384
2023-02-11 00:29:51,204 - mmdet - INFO - Epoch [3][53/61]	lr: 6.973e-04, eta: 0:02:05, time: 0.989, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0030, loss_cls: 0.0383, acc: 99.0234, loss_bbox: 0.0517, loss_mask: 0.0302, loss_mask_iou: 0.0006, loss: 0.1286
2023-02-11 00:29:52,193 - mmdet - INFO - Epoch [3][54/61]	lr: 7.013e-04, eta: 0:02:04, time: 0.989, data_time: 0.043, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0009, loss_cls: 0.0351, acc: 99.4141, loss_bbox: 0.0385, loss_mask: 0.0334, loss_mask_iou: 0.0003, loss: 0.1084
2023-02-11 00:29:53,040 - mmdet - INFO - Epoch [3][55/61]	lr: 7.053e-04, eta: 0:02:03, time: 0.848, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0039, loss_cls: 0.0688, acc: 96.6797, loss_bbox: 0.0645, loss_mask: 0.0585, loss_mask_iou: 0.0004, loss: 0.2042
2023-02-11 00:29:54,165 - mmdet - INFO - Epoch [3][56/61]	lr: 7.093e-04, eta: 0:02:02, time: 1.123, data_time: 0.056, memory: 5787, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0443, loss_cls: 0.3399, acc: 88.4766, loss_bbox: 0.4248, loss_mask: 0.1879, loss_mask_iou: 0.0019, loss: 1.0071
2023-02-11 00:29:55,018 - mmdet - INFO - Epoch [3][57/61]	lr: 7.133e-04, eta: 0:02:01, time: 0.854, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0037, loss_cls: 0.0239, acc: 99.6094, loss_bbox: 0.0470, loss_mask: 0.0329, loss_mask_iou: 0.0004, loss: 0.1228
2023-02-11 00:29:55,882 - mmdet - INFO - Epoch [3][58/61]	lr: 7.173e-04, eta: 0:02:00, time: 0.865, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0024, loss_cls: 0.0109, acc: 100.0000, loss_bbox: 0.0289, loss_mask: 0.0374, loss_mask_iou: 0.0003, loss: 0.0831
2023-02-11 00:29:56,764 - mmdet - INFO - Epoch [3][59/61]	lr: 7.213e-04, eta: 0:01:59, time: 0.882, data_time: 0.018, memory: 5787, loss_rpn_cls: 0.0196, loss_rpn_bbox: 0.0038, loss_cls: 0.0321, acc: 99.2188, loss_bbox: 0.0840, loss_mask: 0.0355, loss_mask_iou: 0.0005, loss: 0.1755
2023-02-11 00:29:57,739 - mmdet - INFO - Epoch [3][60/61]	lr: 7.253e-04, eta: 0:01:58, time: 0.975, data_time: 0.019, memory: 5787, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0094, loss_cls: 0.0430, acc: 98.8281, loss_bbox: 0.0949, loss_mask: 0.0885, loss_mask_iou: 0.0007, loss: 0.2516
2023-02-11 00:29:58,494 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:29:58,495 - mmdet - INFO - Epoch [3][61/61]	lr: 7.293e-04, eta: 0:01:57, time: 0.755, data_time: 0.019, memory: 5787, loss_rpn_cls: 0.0203, loss_rpn_bbox: 0.0001, loss_cls: 0.0172, acc: 99.8047, loss_bbox: 0.0376, loss_mask: 0.0299, loss_mask_iou: 0.0003, loss: 0.1054
2023-02-11 00:29:58,596 - mmdet - INFO - Saving checkpoint at 3 epochs
2023-02-11 00:30:07,730 - mmdet - INFO - Evaluating bbox...
2023-02-11 00:30:07,793 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.679
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.901
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.875
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.614
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.730
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.730
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.730
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.730
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.683
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.775

2023-02-11 00:30:07,793 - mmdet - INFO - Evaluating segm...
2023-02-11 00:30:07,871 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.797
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.893
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.889
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.020
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.664
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.870
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.834
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.834
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.834
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.742
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.900

2023-02-11 00:30:07,872 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:30:07,872 - mmdet - INFO - Epoch(val) [3][13]	bbox_mAP: 0.6790, bbox_mAP_50: 0.9010, bbox_mAP_75: 0.8750, bbox_mAP_s: 0.0500, bbox_mAP_m: 0.6140, bbox_mAP_l: 0.7300, bbox_mAP_copypaste: 0.679 0.901 0.875 0.050 0.614 0.730, segm_mAP: 0.7970, segm_mAP_50: 0.8930, segm_mAP_75: 0.8890, segm_mAP_s: 0.0200, segm_mAP_m: 0.6640, segm_mAP_l: 0.8700, segm_mAP_copypaste: 0.797 0.893 0.889 0.020 0.664 0.870
2023-02-11 00:30:11,049 - mmdet - INFO - Epoch [4][1/61]	lr: 7.333e-04, eta: 0:01:57, time: 3.159, data_time: 2.303, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0003, loss_cls: 0.0476, acc: 97.8516, loss_bbox: 0.0547, loss_mask: 0.0580, loss_mask_iou: 0.0002, loss: 0.1610
2023-02-11 00:30:11,992 - mmdet - INFO - Epoch [4][2/61]	lr: 7.373e-04, eta: 0:01:56, time: 0.942, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0002, loss_cls: 0.0230, acc: 99.6094, loss_bbox: 0.0442, loss_mask: 0.1046, loss_mask_iou: 0.0003, loss: 0.1729
2023-02-11 00:30:12,992 - mmdet - INFO - Epoch [4][3/61]	lr: 7.413e-04, eta: 0:01:56, time: 1.000, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0012, loss_rpn_bbox: 0.0047, loss_cls: 0.0550, acc: 98.0469, loss_bbox: 0.1394, loss_mask: 0.0733, loss_mask_iou: 0.0008, loss: 0.2743
2023-02-11 00:30:13,834 - mmdet - INFO - Epoch [4][4/61]	lr: 7.453e-04, eta: 0:01:54, time: 0.842, data_time: 0.031, memory: 5787, loss_rpn_cls: 0.0162, loss_rpn_bbox: 0.0028, loss_cls: 0.0477, acc: 98.0469, loss_bbox: 0.0631, loss_mask: 0.0785, loss_mask_iou: 0.0002, loss: 0.2084
2023-02-11 00:30:14,871 - mmdet - INFO - Epoch [4][5/61]	lr: 7.493e-04, eta: 0:01:54, time: 1.040, data_time: 0.040, memory: 5787, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0067, loss_cls: 0.0241, acc: 99.4141, loss_bbox: 0.0128, loss_mask: 0.0209, loss_mask_iou: 0.0002, loss: 0.0671
2023-02-11 00:30:15,885 - mmdet - INFO - Epoch [4][6/61]	lr: 7.532e-04, eta: 0:01:53, time: 1.012, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0147, loss_cls: 0.1466, acc: 94.1406, loss_bbox: 0.1951, loss_mask: 0.0690, loss_mask_iou: 0.0008, loss: 0.4266
2023-02-11 00:30:16,802 - mmdet - INFO - Epoch [4][7/61]	lr: 7.572e-04, eta: 0:01:52, time: 0.917, data_time: 0.054, memory: 5787, loss_rpn_cls: 0.0014, loss_rpn_bbox: 0.0448, loss_cls: 0.1498, acc: 93.9453, loss_bbox: 0.2049, loss_mask: 0.1699, loss_mask_iou: 0.0015, loss: 0.5722
2023-02-11 00:30:17,765 - mmdet - INFO - Epoch [4][8/61]	lr: 7.612e-04, eta: 0:01:51, time: 0.963, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0331, loss_rpn_bbox: 0.0022, loss_cls: 0.0615, acc: 98.4375, loss_bbox: 0.0323, loss_mask: 0.0566, loss_mask_iou: 0.0007, loss: 0.1863
2023-02-11 00:30:18,525 - mmdet - INFO - Epoch [4][9/61]	lr: 7.652e-04, eta: 0:01:49, time: 0.761, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0366, loss_rpn_bbox: 0.0006, loss_cls: 0.0118, acc: 100.0000, loss_bbox: 0.0150, loss_mask: 0.0864, loss_mask_iou: 0.0004, loss: 0.1508
2023-02-11 00:30:19,484 - mmdet - INFO - Epoch [4][10/61]	lr: 7.692e-04, eta: 0:01:48, time: 0.957, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0010, loss_cls: 0.0180, acc: 100.0000, loss_bbox: 0.0300, loss_mask: 0.0340, loss_mask_iou: 0.0003, loss: 0.0887
2023-02-11 00:30:20,444 - mmdet - INFO - Epoch [4][11/61]	lr: 7.732e-04, eta: 0:01:48, time: 0.961, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0197, loss_rpn_bbox: 0.0052, loss_cls: 0.0305, acc: 99.6094, loss_bbox: 0.0402, loss_mask: 0.0566, loss_mask_iou: 0.0001, loss: 0.1523
2023-02-11 00:30:21,507 - mmdet - INFO - Epoch [4][12/61]	lr: 7.772e-04, eta: 0:01:47, time: 1.065, data_time: 0.032, memory: 5787, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0169, loss_cls: 0.1145, acc: 95.5078, loss_bbox: 0.2031, loss_mask: 0.1195, loss_mask_iou: 0.0013, loss: 0.4570
2023-02-11 00:30:22,462 - mmdet - INFO - Epoch [4][13/61]	lr: 7.812e-04, eta: 0:01:46, time: 0.953, data_time: 0.033, memory: 5787, loss_rpn_cls: 0.0306, loss_rpn_bbox: 0.0455, loss_cls: 0.2379, acc: 91.9922, loss_bbox: 0.2837, loss_mask: 0.1623, loss_mask_iou: 0.0025, loss: 0.7626
2023-02-11 00:30:23,438 - mmdet - INFO - Epoch [4][14/61]	lr: 7.852e-04, eta: 0:01:45, time: 0.976, data_time: 0.032, memory: 5787, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0016, loss_cls: 0.0061, acc: 100.0000, loss_bbox: 0.0092, loss_mask: 0.0368, loss_mask_iou: 0.0001, loss: 0.0614
2023-02-11 00:30:24,356 - mmdet - INFO - Epoch [4][15/61]	lr: 7.892e-04, eta: 0:01:44, time: 0.918, data_time: 0.036, memory: 5787, loss_rpn_cls: 0.0441, loss_rpn_bbox: 0.0310, loss_cls: 0.1086, acc: 97.0703, loss_bbox: 0.1405, loss_mask: 0.1875, loss_mask_iou: 0.0019, loss: 0.5136
2023-02-11 00:30:25,174 - mmdet - INFO - Epoch [4][16/61]	lr: 7.932e-04, eta: 0:01:43, time: 0.818, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0191, loss_rpn_bbox: 0.0528, loss_cls: 0.1881, acc: 92.7734, loss_bbox: 0.2875, loss_mask: 0.1478, loss_mask_iou: 0.0015, loss: 0.6967
2023-02-11 00:30:26,120 - mmdet - INFO - Epoch [4][17/61]	lr: 7.972e-04, eta: 0:01:42, time: 0.946, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0105, loss_rpn_bbox: 0.0014, loss_cls: 0.0544, acc: 98.2422, loss_bbox: 0.0178, loss_mask: 0.0374, loss_mask_iou: 0.0009, loss: 0.1223
2023-02-11 00:30:26,973 - mmdet - INFO - Epoch [4][18/61]	lr: 8.012e-04, eta: 0:01:41, time: 0.856, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0006, loss_rpn_bbox: 0.0013, loss_cls: 0.0130, acc: 99.4141, loss_bbox: 0.0207, loss_mask: 0.0344, loss_mask_iou: 0.0001, loss: 0.0701
2023-02-11 00:30:27,818 - mmdet - INFO - Epoch [4][19/61]	lr: 8.052e-04, eta: 0:01:40, time: 0.843, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0043, loss_cls: 0.0075, acc: 100.0000, loss_bbox: 0.0180, loss_mask: 0.0301, loss_mask_iou: 0.0001, loss: 0.0602
2023-02-11 00:30:28,803 - mmdet - INFO - Epoch [4][20/61]	lr: 8.092e-04, eta: 0:01:39, time: 0.986, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0025, loss_cls: 0.0419, acc: 99.2188, loss_bbox: 0.0509, loss_mask: 0.0274, loss_mask_iou: 0.0005, loss: 0.1233
2023-02-11 00:30:29,800 - mmdet - INFO - Epoch [4][21/61]	lr: 8.132e-04, eta: 0:01:38, time: 0.996, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0175, loss_rpn_bbox: 0.0078, loss_cls: 0.0637, acc: 97.4609, loss_bbox: 0.1512, loss_mask: 0.1051, loss_mask_iou: 0.0012, loss: 0.3465
2023-02-11 00:30:30,706 - mmdet - INFO - Epoch [4][22/61]	lr: 8.172e-04, eta: 0:01:37, time: 0.906, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0082, loss_cls: 0.0432, acc: 98.4375, loss_bbox: 0.0885, loss_mask: 0.0598, loss_mask_iou: 0.0003, loss: 0.2002
2023-02-11 00:30:31,622 - mmdet - INFO - Epoch [4][23/61]	lr: 8.212e-04, eta: 0:01:36, time: 0.917, data_time: 0.041, memory: 5787, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0052, loss_cls: 0.0464, acc: 98.4375, loss_bbox: 0.0663, loss_mask: 0.0479, loss_mask_iou: 0.0005, loss: 0.1685
2023-02-11 00:30:32,372 - mmdet - INFO - Epoch [4][24/61]	lr: 8.252e-04, eta: 0:01:35, time: 0.748, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0024, loss_cls: 0.0124, acc: 99.8047, loss_bbox: 0.0178, loss_mask: 0.0225, loss_mask_iou: 0.0005, loss: 0.0557
2023-02-11 00:30:33,522 - mmdet - INFO - Epoch [4][25/61]	lr: 8.292e-04, eta: 0:01:34, time: 1.151, data_time: 0.079, memory: 5787, loss_rpn_cls: 0.0164, loss_rpn_bbox: 0.0537, loss_cls: 0.2863, acc: 89.6484, loss_bbox: 0.3465, loss_mask: 0.2273, loss_mask_iou: 0.0026, loss: 0.9328
2023-02-11 00:30:34,488 - mmdet - INFO - Epoch [4][26/61]	lr: 8.332e-04, eta: 0:01:33, time: 0.966, data_time: 0.026, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0089, loss_cls: 0.0943, acc: 97.4609, loss_bbox: 0.1875, loss_mask: 0.1517, loss_mask_iou: 0.0023, loss: 0.4449
2023-02-11 00:30:35,446 - mmdet - INFO - Epoch [4][27/61]	lr: 8.372e-04, eta: 0:01:32, time: 0.958, data_time: 0.031, memory: 5787, loss_rpn_cls: 0.0008, loss_rpn_bbox: 0.0013, loss_cls: 0.0107, acc: 99.8047, loss_bbox: 0.0287, loss_mask: 0.0410, loss_mask_iou: 0.0003, loss: 0.0830
2023-02-11 00:30:36,303 - mmdet - INFO - Epoch [4][28/61]	lr: 8.412e-04, eta: 0:01:31, time: 0.857, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0007, loss_cls: 0.0293, acc: 98.8281, loss_bbox: 0.0232, loss_mask: 0.0408, loss_mask_iou: 0.0002, loss: 0.0943
2023-02-11 00:30:37,257 - mmdet - INFO - Epoch [4][29/61]	lr: 8.452e-04, eta: 0:01:30, time: 0.954, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0107, loss_cls: 0.1804, acc: 95.1172, loss_bbox: 0.1809, loss_mask: 0.1465, loss_mask_iou: 0.0025, loss: 0.5286
2023-02-11 00:30:38,178 - mmdet - INFO - Epoch [4][30/61]	lr: 8.492e-04, eta: 0:01:29, time: 0.921, data_time: 0.029, memory: 5787, loss_rpn_cls: 0.0327, loss_rpn_bbox: 0.0130, loss_cls: 0.0642, acc: 97.6562, loss_bbox: 0.1820, loss_mask: 0.1547, loss_mask_iou: 0.0014, loss: 0.4481
2023-02-11 00:30:39,051 - mmdet - INFO - Epoch [4][31/61]	lr: 8.531e-04, eta: 0:01:28, time: 0.872, data_time: 0.042, memory: 5787, loss_rpn_cls: 0.0280, loss_rpn_bbox: 0.0018, loss_cls: 0.0196, acc: 99.8047, loss_bbox: 0.0152, loss_mask: 0.0281, loss_mask_iou: 0.0001, loss: 0.0927
2023-02-11 00:30:39,920 - mmdet - INFO - Epoch [4][32/61]	lr: 8.571e-04, eta: 0:01:27, time: 0.869, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0023, loss_cls: 0.0254, acc: 99.2188, loss_bbox: 0.0371, loss_mask: 0.0343, loss_mask_iou: 0.0006, loss: 0.1000
2023-02-11 00:30:40,902 - mmdet - INFO - Epoch [4][33/61]	lr: 8.611e-04, eta: 0:01:26, time: 0.983, data_time: 0.040, memory: 5787, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0398, loss_cls: 0.2041, acc: 92.5781, loss_bbox: 0.2580, loss_mask: 0.0852, loss_mask_iou: 0.0011, loss: 0.5963
2023-02-11 00:30:41,753 - mmdet - INFO - Epoch [4][34/61]	lr: 8.651e-04, eta: 0:01:25, time: 0.851, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0014, loss_cls: 0.1068, acc: 95.3125, loss_bbox: 0.0233, loss_mask: 0.0488, loss_mask_iou: 0.0002, loss: 0.1814
2023-02-11 00:30:42,710 - mmdet - INFO - Epoch [4][35/61]	lr: 8.691e-04, eta: 0:01:24, time: 0.958, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0109, loss_cls: 0.1167, acc: 95.8984, loss_bbox: 0.1842, loss_mask: 0.1163, loss_mask_iou: 0.0013, loss: 0.4317
2023-02-11 00:30:43,761 - mmdet - INFO - Epoch [4][36/61]	lr: 8.731e-04, eta: 0:01:23, time: 1.054, data_time: 0.086, memory: 5787, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0048, loss_cls: 0.0297, acc: 99.2188, loss_bbox: 0.0585, loss_mask: 0.0673, loss_mask_iou: 0.0006, loss: 0.1692
2023-02-11 00:30:44,726 - mmdet - INFO - Epoch [4][37/61]	lr: 8.771e-04, eta: 0:01:22, time: 0.961, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0010, loss_rpn_bbox: 0.0040, loss_cls: 0.0141, acc: 99.6094, loss_bbox: 0.0162, loss_mask: 0.0326, loss_mask_iou: 0.0003, loss: 0.0682
2023-02-11 00:30:45,866 - mmdet - INFO - Epoch [4][38/61]	lr: 8.811e-04, eta: 0:01:21, time: 1.141, data_time: 0.089, memory: 5787, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0625, loss_cls: 0.1690, acc: 94.7266, loss_bbox: 0.2233, loss_mask: 0.1175, loss_mask_iou: 0.0011, loss: 0.5813
2023-02-11 00:30:46,754 - mmdet - INFO - Epoch [4][39/61]	lr: 8.851e-04, eta: 0:01:20, time: 0.888, data_time: 0.023, memory: 5787, loss_rpn_cls: 0.0204, loss_rpn_bbox: 0.0125, loss_cls: 0.1099, acc: 95.7031, loss_bbox: 0.1742, loss_mask: 0.2086, loss_mask_iou: 0.0012, loss: 0.5268
2023-02-11 00:30:47,712 - mmdet - INFO - Epoch [4][40/61]	lr: 8.891e-04, eta: 0:01:19, time: 0.958, data_time: 0.041, memory: 5787, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0273, loss_cls: 0.1322, acc: 95.7031, loss_bbox: 0.2505, loss_mask: 0.1405, loss_mask_iou: 0.0016, loss: 0.5533
2023-02-11 00:30:48,664 - mmdet - INFO - Epoch [4][41/61]	lr: 8.931e-04, eta: 0:01:18, time: 0.952, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0023, loss_cls: 0.0207, acc: 99.6094, loss_bbox: 0.0219, loss_mask: 0.0559, loss_mask_iou: 0.0004, loss: 0.1012
2023-02-11 00:30:49,696 - mmdet - INFO - Epoch [4][42/61]	lr: 8.971e-04, eta: 0:01:17, time: 1.031, data_time: 0.032, memory: 5787, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0079, loss_cls: 0.0958, acc: 95.8984, loss_bbox: 0.1407, loss_mask: 0.1463, loss_mask_iou: 0.0081, loss: 0.4010
2023-02-11 00:30:50,655 - mmdet - INFO - Epoch [4][43/61]	lr: 9.011e-04, eta: 0:01:16, time: 0.962, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0600, loss_rpn_bbox: 0.0065, loss_cls: 0.0427, acc: 98.6328, loss_bbox: 0.0409, loss_mask: 0.1053, loss_mask_iou: 0.0009, loss: 0.2562
2023-02-11 00:30:51,608 - mmdet - INFO - Epoch [4][44/61]	lr: 9.051e-04, eta: 0:01:15, time: 0.950, data_time: 0.018, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0025, loss_cls: 0.0137, acc: 99.6094, loss_bbox: 0.0118, loss_mask: 0.0235, loss_mask_iou: 0.0003, loss: 0.0521
2023-02-11 00:30:52,553 - mmdet - INFO - Epoch [4][45/61]	lr: 9.091e-04, eta: 0:01:14, time: 0.945, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0357, loss_rpn_bbox: 0.0022, loss_cls: 0.0178, acc: 100.0000, loss_bbox: 0.0149, loss_mask: 0.0245, loss_mask_iou: 0.0001, loss: 0.0951
2023-02-11 00:30:53,504 - mmdet - INFO - Epoch [4][46/61]	lr: 9.131e-04, eta: 0:01:13, time: 0.950, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0022, loss_cls: 0.0219, acc: 99.2188, loss_bbox: 0.0517, loss_mask: 0.0810, loss_mask_iou: 0.0004, loss: 0.1573
2023-02-11 00:30:54,323 - mmdet - INFO - Epoch [4][47/61]	lr: 9.171e-04, eta: 0:01:12, time: 0.819, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0181, loss_rpn_bbox: 0.0038, loss_cls: 0.0298, acc: 99.2188, loss_bbox: 0.0576, loss_mask: 0.0810, loss_mask_iou: 0.0006, loss: 0.1908
2023-02-11 00:30:55,054 - mmdet - INFO - Epoch [4][48/61]	lr: 9.211e-04, eta: 0:01:11, time: 0.731, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0006, loss_cls: 0.0154, acc: 99.6094, loss_bbox: 0.0273, loss_mask: 0.0265, loss_mask_iou: 0.0002, loss: 0.0700
2023-02-11 00:30:56,003 - mmdet - INFO - Epoch [4][49/61]	lr: 9.251e-04, eta: 0:01:10, time: 0.951, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0011, loss_cls: 0.0237, acc: 99.8047, loss_bbox: 0.0292, loss_mask: 0.1051, loss_mask_iou: 0.0003, loss: 0.1594
2023-02-11 00:30:56,970 - mmdet - INFO - Epoch [4][50/61]	lr: 9.291e-04, eta: 0:01:09, time: 0.967, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0008, loss_cls: 0.0204, acc: 100.0000, loss_bbox: 0.0319, loss_mask: 0.0303, loss_mask_iou: 0.0002, loss: 0.0837
2023-02-11 00:30:57,938 - mmdet - INFO - Epoch [4][51/61]	lr: 9.331e-04, eta: 0:01:08, time: 0.968, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0011, loss_cls: 0.0151, acc: 99.4141, loss_bbox: 0.0232, loss_mask: 0.0183, loss_mask_iou: 0.0002, loss: 0.0578
2023-02-11 00:30:58,894 - mmdet - INFO - Epoch [4][52/61]	lr: 9.371e-04, eta: 0:01:07, time: 0.956, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0153, loss_rpn_bbox: 0.0006, loss_cls: 0.0165, acc: 99.8047, loss_bbox: 0.0186, loss_mask: 0.0199, loss_mask_iou: 0.0003, loss: 0.0712
2023-02-11 00:30:59,751 - mmdet - INFO - Epoch [4][53/61]	lr: 9.411e-04, eta: 0:01:06, time: 0.857, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0006, loss_cls: 0.0198, acc: 99.2188, loss_bbox: 0.0285, loss_mask: 0.0660, loss_mask_iou: 0.0005, loss: 0.1153
2023-02-11 00:31:00,629 - mmdet - INFO - Epoch [4][54/61]	lr: 9.451e-04, eta: 0:01:05, time: 0.880, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0042, loss_cls: 0.0477, acc: 98.2422, loss_bbox: 0.0780, loss_mask: 0.0609, loss_mask_iou: 0.0007, loss: 0.1915
2023-02-11 00:31:01,399 - mmdet - INFO - Epoch [4][55/61]	lr: 9.491e-04, eta: 0:01:04, time: 0.768, data_time: 0.022, memory: 5787, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0063, loss_cls: 0.0795, acc: 97.0703, loss_bbox: 0.1449, loss_mask: 0.0522, loss_mask_iou: 0.0009, loss: 0.2872
2023-02-11 00:31:02,191 - mmdet - INFO - Epoch [4][56/61]	lr: 9.530e-04, eta: 0:01:03, time: 0.792, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0018, loss_cls: 0.0110, acc: 99.6094, loss_bbox: 0.0119, loss_mask: 0.0296, loss_mask_iou: 0.0003, loss: 0.0555
2023-02-11 00:31:03,168 - mmdet - INFO - Epoch [4][57/61]	lr: 9.570e-04, eta: 0:01:02, time: 0.977, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0047, loss_cls: 0.0307, acc: 99.6094, loss_bbox: 0.0434, loss_mask: 0.0574, loss_mask_iou: 0.0020, loss: 0.1527
2023-02-11 00:31:04,026 - mmdet - INFO - Epoch [4][58/61]	lr: 9.610e-04, eta: 0:01:01, time: 0.858, data_time: 0.020, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0019, loss_cls: 0.0161, acc: 99.2188, loss_bbox: 0.0170, loss_mask: 0.0217, loss_mask_iou: 0.0001, loss: 0.0569
2023-02-11 00:31:05,099 - mmdet - INFO - Epoch [4][59/61]	lr: 9.650e-04, eta: 0:01:00, time: 1.075, data_time: 0.041, memory: 5787, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0235, loss_cls: 0.1025, acc: 97.0703, loss_bbox: 0.2033, loss_mask: 0.1535, loss_mask_iou: 0.0013, loss: 0.4880
2023-02-11 00:31:05,942 - mmdet - INFO - Epoch [4][60/61]	lr: 9.690e-04, eta: 0:00:59, time: 0.840, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0249, loss_rpn_bbox: 0.0025, loss_cls: 0.0162, acc: 99.6094, loss_bbox: 0.0202, loss_mask: 0.0340, loss_mask_iou: 0.0007, loss: 0.0985
2023-02-11 00:31:06,832 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:31:06,832 - mmdet - INFO - Epoch [4][61/61]	lr: 9.730e-04, eta: 0:00:58, time: 0.890, data_time: 0.021, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0065, loss_cls: 0.0428, acc: 97.6562, loss_bbox: 0.0537, loss_mask: 0.0399, loss_mask_iou: 0.0005, loss: 0.1434
2023-02-11 00:31:06,925 - mmdet - INFO - Saving checkpoint at 4 epochs
2023-02-11 00:31:15,404 - mmdet - INFO - Evaluating bbox...
2023-02-11 00:31:15,457 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.731
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.905
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.833
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.101
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.649
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.789
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.780
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.717
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.833

2023-02-11 00:31:15,458 - mmdet - INFO - Evaluating segm...
2023-02-11 00:31:15,521 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.804
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.897
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.892
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.682
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.900

2023-02-11 00:31:15,522 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:31:15,522 - mmdet - INFO - Epoch(val) [4][13]	bbox_mAP: 0.7310, bbox_mAP_50: 0.9050, bbox_mAP_75: 0.8330, bbox_mAP_s: 0.1010, bbox_mAP_m: 0.6490, bbox_mAP_l: 0.7890, bbox_mAP_copypaste: 0.731 0.905 0.833 0.101 0.649 0.789, segm_mAP: 0.8040, segm_mAP_50: 0.8970, segm_mAP_75: 0.8920, segm_mAP_s: 0.0500, segm_mAP_m: 0.6820, segm_mAP_l: 0.8740, segm_mAP_copypaste: 0.804 0.897 0.892 0.050 0.682 0.874
2023-02-11 00:31:19,008 - mmdet - INFO - Epoch [5][1/61]	lr: 9.770e-04, eta: 0:00:58, time: 3.466, data_time: 2.506, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0116, loss_cls: 0.1148, acc: 96.4844, loss_bbox: 0.2438, loss_mask: 0.1273, loss_mask_iou: 0.0013, loss: 0.4993
2023-02-11 00:31:19,952 - mmdet - INFO - Epoch [5][2/61]	lr: 9.810e-04, eta: 0:00:57, time: 0.945, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0009, loss_cls: 0.0220, acc: 99.0234, loss_bbox: 0.0571, loss_mask: 0.0637, loss_mask_iou: 0.0005, loss: 0.1442
2023-02-11 00:31:20,909 - mmdet - INFO - Epoch [5][3/61]	lr: 9.850e-04, eta: 0:00:56, time: 0.955, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0325, loss_rpn_bbox: 0.0018, loss_cls: 0.0183, acc: 99.8047, loss_bbox: 0.0161, loss_mask: 0.0286, loss_mask_iou: 0.0003, loss: 0.0975
2023-02-11 00:31:21,868 - mmdet - INFO - Epoch [5][4/61]	lr: 9.890e-04, eta: 0:00:55, time: 0.959, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0018, loss_cls: 0.0126, acc: 99.6094, loss_bbox: 0.0177, loss_mask: 0.0334, loss_mask_iou: 0.0002, loss: 0.0661
2023-02-11 00:31:22,946 - mmdet - INFO - Epoch [5][5/61]	lr: 9.930e-04, eta: 0:00:54, time: 1.078, data_time: 0.047, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0103, loss_cls: 0.0837, acc: 97.2656, loss_bbox: 0.1164, loss_mask: 0.0691, loss_mask_iou: 0.0010, loss: 0.2808
2023-02-11 00:31:23,726 - mmdet - INFO - Epoch [5][6/61]	lr: 9.970e-04, eta: 0:00:53, time: 0.781, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0060, loss_cls: 0.0736, acc: 98.0469, loss_bbox: 0.1583, loss_mask: 0.0511, loss_mask_iou: 0.0009, loss: 0.2898
2023-02-11 00:31:24,682 - mmdet - INFO - Epoch [5][7/61]	lr: 1.001e-03, eta: 0:00:52, time: 0.955, data_time: 0.051, memory: 5787, loss_rpn_cls: 0.0488, loss_rpn_bbox: 0.0291, loss_cls: 0.0767, acc: 98.2422, loss_bbox: 0.1591, loss_mask: 0.1663, loss_mask_iou: 0.0008, loss: 0.4808
2023-02-11 00:31:25,597 - mmdet - INFO - Epoch [5][8/61]	lr: 1.005e-03, eta: 0:00:51, time: 0.917, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0062, loss_cls: 0.1484, acc: 94.3359, loss_bbox: 0.1760, loss_mask: 0.1078, loss_mask_iou: 0.0017, loss: 0.4405
2023-02-11 00:31:26,591 - mmdet - INFO - Epoch [5][9/61]	lr: 1.009e-03, eta: 0:00:50, time: 0.994, data_time: 0.059, memory: 5787, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0222, loss_cls: 0.1200, acc: 95.3125, loss_bbox: 0.2224, loss_mask: 0.1346, loss_mask_iou: 0.0016, loss: 0.5028
2023-02-11 00:31:27,474 - mmdet - INFO - Epoch [5][10/61]	lr: 1.013e-03, eta: 0:00:49, time: 0.882, data_time: 0.013, memory: 5787, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0052, loss_cls: 0.0259, acc: 99.2188, loss_bbox: 0.0609, loss_mask: 0.0329, loss_mask_iou: 0.0002, loss: 0.1264
2023-02-11 00:31:28,445 - mmdet - INFO - Epoch [5][11/61]	lr: 1.017e-03, eta: 0:00:48, time: 0.972, data_time: 0.024, memory: 5787, loss_rpn_cls: 0.0007, loss_rpn_bbox: 0.0009, loss_cls: 0.0127, acc: 99.6094, loss_bbox: 0.0180, loss_mask: 0.0490, loss_mask_iou: 0.0001, loss: 0.0813
2023-02-11 00:31:29,442 - mmdet - INFO - Epoch [5][12/61]	lr: 1.021e-03, eta: 0:00:47, time: 0.997, data_time: 0.013, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0029, loss_cls: 0.0345, acc: 98.6328, loss_bbox: 0.0402, loss_mask: 0.0377, loss_mask_iou: 0.0005, loss: 0.1160
2023-02-11 00:31:30,454 - mmdet - INFO - Epoch [5][13/61]	lr: 1.025e-03, eta: 0:00:46, time: 1.012, data_time: 0.078, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0012, loss_cls: 0.0251, acc: 99.0234, loss_bbox: 0.0355, loss_mask: 0.0853, loss_mask_iou: 0.0002, loss: 0.1474
2023-02-11 00:31:31,310 - mmdet - INFO - Epoch [5][14/61]	lr: 1.029e-03, eta: 0:00:45, time: 0.856, data_time: 0.013, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0009, loss_cls: 0.0128, acc: 99.8047, loss_bbox: 0.0498, loss_mask: 0.0603, loss_mask_iou: 0.0005, loss: 0.1244
2023-02-11 00:31:32,474 - mmdet - INFO - Epoch [5][15/61]	lr: 1.033e-03, eta: 0:00:44, time: 1.164, data_time: 0.098, memory: 5787, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0562, loss_cls: 0.1389, acc: 94.7266, loss_bbox: 0.2618, loss_mask: 0.1366, loss_mask_iou: 0.0024, loss: 0.6007
2023-02-11 00:31:33,324 - mmdet - INFO - Epoch [5][16/61]	lr: 1.037e-03, eta: 0:00:43, time: 0.850, data_time: 0.013, memory: 5787, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0014, loss_cls: 0.0096, acc: 100.0000, loss_bbox: 0.0231, loss_mask: 0.0297, loss_mask_iou: 0.0001, loss: 0.0695
2023-02-11 00:31:34,406 - mmdet - INFO - Epoch [5][17/61]	lr: 1.041e-03, eta: 0:00:42, time: 1.082, data_time: 0.073, memory: 5787, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0081, loss_cls: 0.0848, acc: 96.2891, loss_bbox: 0.1111, loss_mask: 0.1097, loss_mask_iou: 0.0012, loss: 0.3162
2023-02-11 00:31:35,491 - mmdet - INFO - Epoch [5][18/61]	lr: 1.045e-03, eta: 0:00:41, time: 1.083, data_time: 0.014, memory: 5787, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0367, loss_cls: 0.1967, acc: 92.5781, loss_bbox: 0.2945, loss_mask: 0.1778, loss_mask_iou: 0.0023, loss: 0.7085
2023-02-11 00:31:36,479 - mmdet - INFO - Epoch [5][19/61]	lr: 1.049e-03, eta: 0:00:40, time: 0.989, data_time: 0.037, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0078, loss_cls: 0.0742, acc: 96.6797, loss_bbox: 0.1345, loss_mask: 0.1067, loss_mask_iou: 0.0011, loss: 0.3246
2023-02-11 00:31:37,377 - mmdet - INFO - Epoch [5][20/61]	lr: 1.053e-03, eta: 0:00:39, time: 0.898, data_time: 0.014, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0044, loss_cls: 0.0384, acc: 98.8281, loss_bbox: 0.0756, loss_mask: 0.0390, loss_mask_iou: 0.0003, loss: 0.1579
2023-02-11 00:31:38,333 - mmdet - INFO - Epoch [5][21/61]	lr: 1.057e-03, eta: 0:00:38, time: 0.955, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0009, loss_cls: 0.0214, acc: 99.4141, loss_bbox: 0.0424, loss_mask: 0.0852, loss_mask_iou: 0.0002, loss: 0.1500
2023-02-11 00:31:39,283 - mmdet - INFO - Epoch [5][22/61]	lr: 1.061e-03, eta: 0:00:37, time: 0.950, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0015, loss_cls: 0.0081, acc: 99.8047, loss_bbox: 0.0109, loss_mask: 0.0208, loss_mask_iou: 0.0003, loss: 0.0419
2023-02-11 00:31:40,278 - mmdet - INFO - Epoch [5][23/61]	lr: 1.065e-03, eta: 0:00:36, time: 0.995, data_time: 0.037, memory: 5787, loss_rpn_cls: 0.0009, loss_rpn_bbox: 0.0035, loss_cls: 0.0219, acc: 99.4141, loss_bbox: 0.0546, loss_mask: 0.0666, loss_mask_iou: 0.0003, loss: 0.1478
2023-02-11 00:31:41,226 - mmdet - INFO - Epoch [5][24/61]	lr: 1.069e-03, eta: 0:00:36, time: 0.949, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0028, loss_cls: 0.0416, acc: 98.2422, loss_bbox: 0.0272, loss_mask: 0.0341, loss_mask_iou: 0.0004, loss: 0.1178
2023-02-11 00:31:42,099 - mmdet - INFO - Epoch [5][25/61]	lr: 1.073e-03, eta: 0:00:35, time: 0.872, data_time: 0.027, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0032, loss_cls: 0.0299, acc: 99.0234, loss_bbox: 0.0812, loss_mask: 0.0650, loss_mask_iou: 0.0006, loss: 0.1800
2023-02-11 00:31:42,947 - mmdet - INFO - Epoch [5][26/61]	lr: 1.077e-03, eta: 0:00:34, time: 0.848, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0015, loss_cls: 0.0120, acc: 99.2188, loss_bbox: 0.0151, loss_mask: 0.0216, loss_mask_iou: 0.0001, loss: 0.0507
2023-02-11 00:31:43,922 - mmdet - INFO - Epoch [5][27/61]	lr: 1.081e-03, eta: 0:00:33, time: 0.975, data_time: 0.039, memory: 5787, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0024, loss_cls: 0.0306, acc: 98.8281, loss_bbox: 0.0365, loss_mask: 0.0438, loss_mask_iou: 0.0002, loss: 0.1195
2023-02-11 00:31:44,859 - mmdet - INFO - Epoch [5][28/61]	lr: 1.085e-03, eta: 0:00:32, time: 0.937, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0015, loss_cls: 0.0120, acc: 99.6094, loss_bbox: 0.0174, loss_mask: 0.0348, loss_mask_iou: 0.0001, loss: 0.0658
2023-02-11 00:31:45,648 - mmdet - INFO - Epoch [5][29/61]	lr: 1.089e-03, eta: 0:00:31, time: 0.789, data_time: 0.049, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0017, loss_cls: 0.0146, acc: 99.6094, loss_bbox: 0.0319, loss_mask: 0.0194, loss_mask_iou: 0.0001, loss: 0.0679
2023-02-11 00:31:46,671 - mmdet - INFO - Epoch [5][30/61]	lr: 1.093e-03, eta: 0:00:30, time: 1.023, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0090, loss_cls: 0.0788, acc: 97.6562, loss_bbox: 0.1473, loss_mask: 0.1574, loss_mask_iou: 0.0095, loss: 0.4094
2023-02-11 00:31:47,763 - mmdet - INFO - Epoch [5][31/61]	lr: 1.097e-03, eta: 0:00:29, time: 1.091, data_time: 0.060, memory: 5787, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0177, loss_cls: 0.0764, acc: 97.4609, loss_bbox: 0.1573, loss_mask: 0.1129, loss_mask_iou: 0.0006, loss: 0.3675
2023-02-11 00:31:48,516 - mmdet - INFO - Epoch [5][32/61]	lr: 1.101e-03, eta: 0:00:28, time: 0.753, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0015, loss_rpn_bbox: 0.0001, loss_cls: 0.0082, acc: 99.8047, loss_bbox: 0.0110, loss_mask: 0.0846, loss_mask_iou: 0.0000, loss: 0.1055
2023-02-11 00:31:49,336 - mmdet - INFO - Epoch [5][33/61]	lr: 1.105e-03, eta: 0:00:27, time: 0.821, data_time: 0.045, memory: 5787, loss_rpn_cls: 0.0005, loss_rpn_bbox: 0.0008, loss_cls: 0.0080, acc: 100.0000, loss_bbox: 0.0105, loss_mask: 0.0239, loss_mask_iou: 0.0002, loss: 0.0438
2023-02-11 00:31:50,288 - mmdet - INFO - Epoch [5][34/61]	lr: 1.109e-03, eta: 0:00:26, time: 0.952, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0298, loss_cls: 0.1292, acc: 94.7266, loss_bbox: 0.1926, loss_mask: 0.0841, loss_mask_iou: 0.0009, loss: 0.4383
2023-02-11 00:31:51,268 - mmdet - INFO - Epoch [5][35/61]	lr: 1.113e-03, eta: 0:00:25, time: 0.980, data_time: 0.036, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0010, loss_cls: 0.0168, acc: 100.0000, loss_bbox: 0.0231, loss_mask: 0.0303, loss_mask_iou: 0.0002, loss: 0.0717
2023-02-11 00:31:52,292 - mmdet - INFO - Epoch [5][36/61]	lr: 1.117e-03, eta: 0:00:24, time: 1.024, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0054, loss_cls: 0.0118, acc: 99.8047, loss_bbox: 0.0162, loss_mask: 0.0172, loss_mask_iou: 0.0002, loss: 0.0532
2023-02-11 00:31:53,325 - mmdet - INFO - Epoch [5][37/61]	lr: 1.121e-03, eta: 0:00:23, time: 1.032, data_time: 0.035, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0122, loss_cls: 0.1110, acc: 95.7031, loss_bbox: 0.1659, loss_mask: 0.0683, loss_mask_iou: 0.0009, loss: 0.3585
2023-02-11 00:31:54,162 - mmdet - INFO - Epoch [5][38/61]	lr: 1.125e-03, eta: 0:00:22, time: 0.837, data_time: 0.016, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0051, loss_cls: 0.0655, acc: 97.0703, loss_bbox: 0.0806, loss_mask: 0.0572, loss_mask_iou: 0.0006, loss: 0.2093
2023-02-11 00:31:55,008 - mmdet - INFO - Epoch [5][39/61]	lr: 1.129e-03, eta: 0:00:21, time: 0.846, data_time: 0.040, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0018, loss_cls: 0.0177, acc: 99.6094, loss_bbox: 0.0386, loss_mask: 0.0505, loss_mask_iou: 0.0002, loss: 0.1089
2023-02-11 00:31:55,856 - mmdet - INFO - Epoch [5][40/61]	lr: 1.133e-03, eta: 0:00:20, time: 0.848, data_time: 0.017, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0011, loss_cls: 0.0418, acc: 98.8281, loss_bbox: 0.0164, loss_mask: 0.0495, loss_mask_iou: 0.0003, loss: 0.1092
2023-02-11 00:31:56,694 - mmdet - INFO - Epoch [5][41/61]	lr: 1.137e-03, eta: 0:00:19, time: 0.838, data_time: 0.050, memory: 5787, loss_rpn_cls: 0.0184, loss_rpn_bbox: 0.0516, loss_cls: 0.1439, acc: 93.3594, loss_bbox: 0.2635, loss_mask: 0.1455, loss_mask_iou: 0.0029, loss: 0.6258
2023-02-11 00:31:57,653 - mmdet - INFO - Epoch [5][42/61]	lr: 1.141e-03, eta: 0:00:18, time: 0.959, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0058, loss_cls: 0.0285, acc: 99.0234, loss_bbox: 0.0435, loss_mask: 0.0471, loss_mask_iou: 0.0017, loss: 0.1354
2023-02-11 00:31:58,605 - mmdet - INFO - Epoch [5][43/61]	lr: 1.145e-03, eta: 0:00:17, time: 0.952, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0003, loss_rpn_bbox: 0.0011, loss_cls: 0.0121, acc: 99.8047, loss_bbox: 0.0135, loss_mask: 0.0494, loss_mask_iou: 0.0003, loss: 0.0766
2023-02-11 00:31:59,544 - mmdet - INFO - Epoch [5][44/61]	lr: 1.149e-03, eta: 0:00:16, time: 0.939, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0028, loss_cls: 0.0166, acc: 99.4141, loss_bbox: 0.0229, loss_mask: 0.0419, loss_mask_iou: 0.0002, loss: 0.0844
2023-02-11 00:32:00,498 - mmdet - INFO - Epoch [5][45/61]	lr: 1.153e-03, eta: 0:00:15, time: 0.955, data_time: 0.025, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0012, loss_cls: 0.0098, acc: 99.8047, loss_bbox: 0.0193, loss_mask: 0.0150, loss_mask_iou: 0.0008, loss: 0.0464
2023-02-11 00:32:01,352 - mmdet - INFO - Epoch [5][46/61]	lr: 1.157e-03, eta: 0:00:14, time: 0.853, data_time: 0.014, memory: 5787, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0036, loss_cls: 0.0201, acc: 99.2188, loss_bbox: 0.0390, loss_mask: 0.0417, loss_mask_iou: 0.0006, loss: 0.1083
2023-02-11 00:32:02,093 - mmdet - INFO - Epoch [5][47/61]	lr: 1.161e-03, eta: 0:00:13, time: 0.740, data_time: 0.027, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0006, loss_cls: 0.0115, acc: 99.8047, loss_bbox: 0.0375, loss_mask: 0.0266, loss_mask_iou: 0.0010, loss: 0.0772
2023-02-11 00:32:03,087 - mmdet - INFO - Epoch [5][48/61]	lr: 1.165e-03, eta: 0:00:12, time: 0.995, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0002, loss_rpn_bbox: 0.0041, loss_cls: 0.0467, acc: 98.0469, loss_bbox: 0.1381, loss_mask: 0.0749, loss_mask_iou: 0.0010, loss: 0.2650
2023-02-11 00:32:03,939 - mmdet - INFO - Epoch [5][49/61]	lr: 1.169e-03, eta: 0:00:11, time: 0.853, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0013, loss_rpn_bbox: 0.0038, loss_cls: 0.0091, acc: 99.6094, loss_bbox: 0.0244, loss_mask: 0.0427, loss_mask_iou: 0.0002, loss: 0.0815
2023-02-11 00:32:04,897 - mmdet - INFO - Epoch [5][50/61]	lr: 1.173e-03, eta: 0:00:10, time: 0.957, data_time: 0.014, memory: 5787, loss_rpn_cls: 0.0004, loss_rpn_bbox: 0.0055, loss_cls: 0.0170, acc: 99.6094, loss_bbox: 0.0270, loss_mask: 0.0991, loss_mask_iou: 0.0008, loss: 0.1497
2023-02-11 00:32:05,786 - mmdet - INFO - Epoch [5][51/61]	lr: 1.177e-03, eta: 0:00:09, time: 0.889, data_time: 0.035, memory: 5787, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0025, loss_cls: 0.0290, acc: 98.6328, loss_bbox: 0.0395, loss_mask: 0.0300, loss_mask_iou: 0.0009, loss: 0.1071
2023-02-11 00:32:06,632 - mmdet - INFO - Epoch [5][52/61]	lr: 1.181e-03, eta: 0:00:08, time: 0.846, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0009, loss_cls: 0.0173, acc: 99.4141, loss_bbox: 0.0248, loss_mask: 0.0727, loss_mask_iou: 0.0002, loss: 0.1159
2023-02-11 00:32:07,562 - mmdet - INFO - Epoch [5][53/61]	lr: 1.185e-03, eta: 0:00:07, time: 0.930, data_time: 0.042, memory: 5787, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0095, loss_cls: 0.0761, acc: 96.8750, loss_bbox: 0.1561, loss_mask: 0.1783, loss_mask_iou: 0.0025, loss: 0.4261
2023-02-11 00:32:08,455 - mmdet - INFO - Epoch [5][54/61]	lr: 1.189e-03, eta: 0:00:06, time: 0.892, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0108, loss_cls: 0.0380, acc: 99.2188, loss_bbox: 0.0793, loss_mask: 0.0459, loss_mask_iou: 0.0007, loss: 0.1747
2023-02-11 00:32:09,421 - mmdet - INFO - Epoch [5][55/61]	lr: 1.193e-03, eta: 0:00:05, time: 0.966, data_time: 0.041, memory: 5787, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0321, loss_cls: 0.1583, acc: 92.9688, loss_bbox: 0.2061, loss_mask: 0.1258, loss_mask_iou: 0.0019, loss: 0.5260
2023-02-11 00:32:10,269 - mmdet - INFO - Epoch [5][56/61]	lr: 1.197e-03, eta: 0:00:04, time: 0.849, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0013, loss_cls: 0.0147, acc: 99.6094, loss_bbox: 0.0138, loss_mask: 0.0394, loss_mask_iou: 0.0004, loss: 0.0806
2023-02-11 00:32:11,161 - mmdet - INFO - Epoch [5][57/61]	lr: 1.201e-03, eta: 0:00:03, time: 0.891, data_time: 0.028, memory: 5787, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0090, loss_cls: 0.0819, acc: 96.8750, loss_bbox: 0.1420, loss_mask: 0.1701, loss_mask_iou: 0.0022, loss: 0.4121
2023-02-11 00:32:12,109 - mmdet - INFO - Epoch [5][58/61]	lr: 1.205e-03, eta: 0:00:02, time: 0.950, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0000, loss_rpn_bbox: 0.0009, loss_cls: 0.0052, acc: 100.0000, loss_bbox: 0.0086, loss_mask: 0.0364, loss_mask_iou: 0.0002, loss: 0.0514
2023-02-11 00:32:12,987 - mmdet - INFO - Epoch [5][59/61]	lr: 1.209e-03, eta: 0:00:01, time: 0.877, data_time: 0.034, memory: 5787, loss_rpn_cls: 0.0001, loss_rpn_bbox: 0.0006, loss_cls: 0.0171, acc: 99.0234, loss_bbox: 0.0333, loss_mask: 0.0442, loss_mask_iou: 0.0001, loss: 0.0953
2023-02-11 00:32:13,928 - mmdet - INFO - Epoch [5][60/61]	lr: 1.213e-03, eta: 0:00:00, time: 0.941, data_time: 0.015, memory: 5787, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0014, loss_cls: 0.0178, acc: 99.4141, loss_bbox: 0.0154, loss_mask: 0.0244, loss_mask_iou: 0.0001, loss: 0.0679
2023-02-11 00:32:14,836 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:32:14,836 - mmdet - INFO - Epoch [5][61/61]	lr: 1.217e-03, eta: 0:00:00, time: 0.908, data_time: 0.041, memory: 5787, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0452, loss_cls: 0.1689, acc: 92.5781, loss_bbox: 0.1823, loss_mask: 0.1074, loss_mask_iou: 0.0007, loss: 0.5074
2023-02-11 00:32:14,938 - mmdet - INFO - Saving checkpoint at 5 epochs
2023-02-11 00:32:23,244 - mmdet - INFO - Evaluating bbox...
2023-02-11 00:32:23,291 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.756
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.903
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.875
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.084
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.610
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.826
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.812
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.812
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.812
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.742
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.867

2023-02-11 00:32:23,292 - mmdet - INFO - Evaluating segm...
2023-02-11 00:32:23,348 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.809
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.895
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.890
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.029
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.675
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.884
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.750
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.911

2023-02-11 00:32:23,349 - mmdet - INFO - Exp name: balloon_config.py
2023-02-11 00:32:23,349 - mmdet - INFO - Epoch(val) [5][13]	bbox_mAP: 0.7560, bbox_mAP_50: 0.9030, bbox_mAP_75: 0.8750, bbox_mAP_s: 0.0840, bbox_mAP_m: 0.6100, bbox_mAP_l: 0.8260, bbox_mAP_copypaste: 0.756 0.903 0.875 0.084 0.610 0.826, segm_mAP: 0.8090, segm_mAP_50: 0.8950, segm_mAP_75: 0.8900, segm_mAP_s: 0.0290, segm_mAP_m: 0.6750, segm_mAP_l: 0.8840, segm_mAP_copypaste: 0.809 0.895 0.890 0.029 0.675 0.884
